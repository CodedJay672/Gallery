/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={286:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(537),a=n.n(r),o=n(645),l=n.n(o)()(a());l.push([e.id,".wrapper {\n  margin: 10px;\n}","",{version:3,sources:["webpack://./src/Gallery/Gallery.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd",sourcesContent:[".wrapper {\n  margin: 10px;\n}"],sourceRoot:""}]);const i=l},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var i=0;i<this.length;i++){var u=this[i][0];null!=u&&(l[u]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&l[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,i={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(i[e]=t,e=0;e<t.length;e++)l.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function v(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=m.hasOwnProperty(t)?m[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(h,e)||!d.call(p,e)&&(f.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,y);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,y);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,y);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),S=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),_=Symbol.for("react.context"),L=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),D=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var z=Symbol.iterator;function M(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=z&&e[z]||e["@@iterator"])?e:null}var I,F=Object.assign;function A(e){if(void 0===I)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);I=t&&t[1]||""}return"\n"+I+e}var j=!1;function U(e,t){if(!e||j)return"";j=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i]){var u="\n"+a[l].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=l&&0<=i);break}}}finally{j=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?A(e):""}function B(e){switch(e.tag){case 5:return A(e.type);case 16:return A("Lazy");case 13:return A("Suspense");case 19:return A("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case C:return"Profiler";case E:return"StrictMode";case R:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case L:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case P:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case D:t=e._payload,e=e._init;try{return V(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function q(e,t){var n=t.checked;return F({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function X(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function G(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function J(e,t){G(e,t);var n=H(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return F({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function oe(e,t){var n=H(t.value),r=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function me(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ve(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ge=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,xe=null,Ee=null;function Ce(e){if(e=ba(e)){if("function"!=typeof Se)throw Error(o(280));var t=e.stateNode;t&&(t=ka(t),Se(e.stateNode,e.type,t))}}function Ne(e){xe?Ee?Ee.push(e):Ee=[e]:xe=e}function _e(){if(xe){var e=xe,t=Ee;if(Ee=xe=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Le(e,t){return e(t)}function Re(){}var Te=!1;function Pe(e,t,n){if(Te)return e(t,n);Te=!0;try{return Le(e,t,n)}finally{Te=!1,(null!==xe||null!==Ee)&&(Re(),_e())}}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=ka(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Oe=!1;if(c)try{var ze={};Object.defineProperty(ze,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",ze,ze),window.removeEventListener("test",ze,ze)}catch(ce){Oe=!1}function Me(e,t,n,r,a,o,l,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ie=!1,Fe=null,Ae=!1,je=null,Ue={onError:function(e){Ie=!0,Fe=e}};function Be(e,t,n,r,a,o,l,i,u){Ie=!1,Fe=null,Me.apply(Ue,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function He(e){if(Ve(e)!==e)throw Error(o(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){n=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===n)return He(a),e;if(l===r)return He(a),t;l=l.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=l;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=l;break}if(u===r){i=!0,r=a,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=a;break}if(u===r){i=!0,r=l,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var Ye=a.unstable_scheduleCallback,Ke=a.unstable_cancelCallback,qe=a.unstable_shouldYield,Xe=a.unstable_requestPaint,Ge=a.unstable_now,Je=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,ot=null,lt=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2,st=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ft(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,l=268435455&n;if(0!==l){var i=l&~a;0!==i?r=dt(i):0!=(o&=l)&&(r=dt(o))}else 0!=(l=n&~a)?r=dt(l):0!==o&&(r=dt(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-lt(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=st;return 0==(4194240&(st<<=1))&&(st=64),e}function mt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-lt(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-lt(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kt,St,xt,Et,Ct,Nt=!1,_t=[],Lt=null,Rt=null,Tt=null,Pt=new Map,Dt=new Map,Ot=[],zt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Lt=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":Pt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Dt.delete(t.pointerId)}}function It(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=ba(t))&&St(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ft(e){var t=ya(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void Ct(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function At(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function jt(e,t,n){At(e)&&n.delete(t)}function Ut(){Nt=!1,null!==Lt&&At(Lt)&&(Lt=null),null!==Rt&&At(Rt)&&(Rt=null),null!==Tt&&At(Tt)&&(Tt=null),Pt.forEach(jt),Dt.forEach(jt)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ut)))}function Vt(e){function t(t){return Bt(t,e)}if(0<_t.length){Bt(_t[0],e);for(var n=1;n<_t.length;n++){var r=_t[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Lt&&Bt(Lt,e),null!==Rt&&Bt(Rt,e),null!==Tt&&Bt(Tt,e),Pt.forEach(t),Dt.forEach(t),n=0;n<Ot.length;n++)(r=Ot[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Ft(n),null===n.blockedOn&&Ot.shift()}var Wt=w.ReactCurrentBatchConfig,Ht=!0;function $t(e,t,n,r){var a=bt,o=Wt.transition;Wt.transition=null;try{bt=1,Yt(e,t,n,r)}finally{bt=a,Wt.transition=o}}function Qt(e,t,n,r){var a=bt,o=Wt.transition;Wt.transition=null;try{bt=4,Yt(e,t,n,r)}finally{bt=a,Wt.transition=o}}function Yt(e,t,n,r){if(Ht){var a=qt(e,t,n,r);if(null===a)Hr(e,t,r,Kt,n),Mt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Lt=It(Lt,e,t,n,r,a),!0;case"dragenter":return Rt=It(Rt,e,t,n,r,a),!0;case"mouseover":return Tt=It(Tt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Pt.set(o,It(Pt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Dt.set(o,It(Dt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Mt(e,r),4&t&&-1<zt.indexOf(e)){for(;null!==a;){var o=ba(a);if(null!==o&&kt(o),null===(o=qt(e,t,n,r))&&Hr(e,t,r,Kt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Hr(e,t,r,null,n)}}var Kt=null;function qt(e,t,n,r){if(Kt=null,null!==(e=ya(e=ke(r))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Xt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Gt=null,Jt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Jt,r=n.length,a="value"in Gt?Gt.value:Gt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return F(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,ln,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(sn),dn=F({},sn,{view:0,detail:0}),fn=an(dn),pn=F({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(on=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=on=0,un=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=an(pn),vn=an(F({},pn,{dataTransfer:0})),mn=an(F({},dn,{relatedTarget:0})),gn=an(F({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=F({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(yn),wn=an(F({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return En}var Nn=F({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=an(Nn),Ln=an(F({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=an(F({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=an(F({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=F({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=an(Pn),On=[9,13,27,32],zn=c&&"CompositionEvent"in window,Mn=null;c&&"documentMode"in document&&(Mn=document.documentMode);var In=c&&"TextEvent"in window&&!Mn,Fn=c&&(!zn||Mn&&8<Mn&&11>=Mn),An=String.fromCharCode(32),jn=!1;function Un(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1,Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function $n(e,t,n,r){Ne(r),0<(t=Qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,Yn=null;function Kn(e){Ar(e,0)}function qn(e){if(Y(wa(e)))return e}function Xn(e,t){if("change"===e)return t}var Gn=!1;if(c){var Jn;if(c){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"==typeof er.oninput}Jn=Zn}else Jn=!1;Gn=Jn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),Yn=Qn=null)}function nr(e){if("value"===e.propertyName&&qn(Yn)){var t=[];$n(t,Yn,e,ke(e)),Pe(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Yn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return qn(Yn)}function or(e,t){if("click"===e)return qn(t)}function lr(e,t){if("input"===e||"change"===e)return qn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!ir(e[a],t[a]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=fr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=cr(n,o);var l=cr(n,r);a&&l&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var vr=c&&"documentMode"in document&&11>=document.documentMode,mr=null,gr=null,yr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==mr||mr!==K(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=Qr(gr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}function kr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Sr={animationend:kr("Animation","AnimationEnd"),animationiteration:kr("Animation","AnimationIteration"),animationstart:kr("Animation","AnimationStart"),transitionend:kr("Transition","TransitionEnd")},xr={},Er={};function Cr(e){if(xr[e])return xr[e];if(!Sr[e])return e;var t,n=Sr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return xr[e]=n[t];return e}c&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var Nr=Cr("animationend"),_r=Cr("animationiteration"),Lr=Cr("animationstart"),Rr=Cr("transitionend"),Tr=new Map,Pr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Dr(e,t){Tr.set(e,t),u(t,[e])}for(var Or=0;Or<Pr.length;Or++){var zr=Pr[Or];Dr(zr.toLowerCase(),"on"+(zr[0].toUpperCase()+zr.slice(1)))}Dr(Nr,"onAnimationEnd"),Dr(_r,"onAnimationIteration"),Dr(Lr,"onAnimationStart"),Dr("dblclick","onDoubleClick"),Dr("focusin","onFocus"),Dr("focusout","onBlur"),Dr(Rr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Mr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ir=new Set("cancel close invalid load scroll toggle".split(" ").concat(Mr));function Fr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,l,i,u,s){if(Be.apply(this,arguments),Ie){if(!Ie)throw Error(o(198));var c=Fe;Ie=!1,Fe=null,Ae||(Ae=!0,je=c)}}(r,t,void 0,e),e.currentTarget=null}function Ar(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Fr(a,i,s),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,s=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Fr(a,i,s),o=u}}}if(Ae)throw e=je,Ae=!1,je=null,e}function jr(e,t){var n=t[va];void 0===n&&(n=t[va]=new Set);var r=e+"__bubble";n.has(r)||(Wr(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),Wr(n,e,r,t)}var Br="_reactListening"+Math.random().toString(36).slice(2);function Vr(e){if(!e[Br]){e[Br]=!0,l.forEach((function(t){"selectionchange"!==t&&(Ir.has(t)||Ur(t,!1,e),Ur(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Br]||(t[Br]=!0,Ur("selectionchange",!1,t))}}function Wr(e,t,n,r){switch(Xt(t)){case 1:var a=$t;break;case 4:a=Qt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Oe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Hr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=ya(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}Pe((function(){var r=o,a=ke(n),l=[];e:{var i=Tr.get(e);if(void 0!==i){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":s="focus",u=mn;break;case"focusout":s="blur",u=mn;break;case"beforeblur":case"afterblur":u=mn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Rn;break;case Nr:case _r:case Lr:u=gn;break;case Rr:u=Tn;break;case"scroll":u=fn;break;case"wheel":u=Dn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Ln}var c=0!=(4&t),d=!c&&"scroll"===e,f=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var v=(p=h).stateNode;if(5===p.tag&&null!==v&&(p=v,null!==f&&null!=(v=De(h,f))&&c.push($r(h,v,p))),d)break;h=h.return}0<c.length&&(i=new u(i,s,null,n,a),l.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===we||!(s=n.relatedTarget||n.fromElement)||!ya(s)&&!s[ha])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?ya(s):null)&&(s!==(d=Ve(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=hn,v="onMouseLeave",f="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Ln,v="onPointerLeave",f="onPointerEnter",h="pointer"),d=null==u?i:wa(u),p=null==s?i:wa(s),(i=new c(v,h+"leave",u,n,a)).target=d,i.relatedTarget=p,v=null,ya(a)===r&&((c=new c(f,h+"enter",s,n,a)).target=p,c.relatedTarget=d,v=c),d=v,u&&s)e:{for(f=s,h=0,p=c=u;p;p=Yr(p))h++;for(p=0,v=f;v;v=Yr(v))p++;for(;0<h-p;)c=Yr(c),h--;for(;0<p-h;)f=Yr(f),p--;for(;h--;){if(c===f||null!==f&&c===f.alternate)break e;c=Yr(c),f=Yr(f)}c=null}else c=null;null!==u&&Kr(l,i,u,c,!1),null!==s&&null!==d&&Kr(l,d,s,c,!0)}if("select"===(u=(i=r?wa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var m=Xn;else if(Hn(i))if(Gn)m=lr;else{m=ar;var g=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(m=or);switch(m&&(m=m(e,r))?$n(l,m,n,a):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&ee(i,"number",i.value)),g=r?wa(r):window,e){case"focusin":(Hn(g)||"true"===g.contentEditable)&&(mr=g,gr=r,yr=null);break;case"focusout":yr=gr=mr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(l,n,a);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":wr(l,n,a)}var y;if(zn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Vn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Vn&&(y=en()):(Jt="value"in(Gt=a)?Gt.value:Gt.textContent,Vn=!0)),0<(g=Qr(r,b)).length&&(b=new wn(b,e,null,n,a),l.push({event:b,listeners:g}),(y||null!==(y=Bn(n)))&&(b.data=y))),(y=In?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(jn=!0,An);case"textInput":return(e=t.data)===An&&jn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!zn&&Un(e,t)?(e=en(),Zt=Jt=Gt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Qr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=y)}Ar(l,t)}))}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=De(e,n))&&r.unshift($r(e,o,a)),null!=(o=De(e,t))&&r.push($r(e,o,a))),e=e.return}return r}function Yr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,a?null!=(u=De(n,o))&&l.unshift($r(n,u,i)):a||null!=(u=De(n,o))&&l.push($r(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}var qr=/\r\n?/g,Xr=/\u0000|\uFFFD/g;function Gr(e){return("string"==typeof e?e:""+e).replace(qr,"\n").replace(Xr,"")}function Jr(e,t,n){if(t=Gr(t),Gr(e)!==t&&n)throw Error(o(425))}function Zr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,la="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Vt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Vt(t)}function sa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),fa="__reactFiber$"+da,pa="__reactProps$"+da,ha="__reactContainer$"+da,va="__reactEvents$"+da,ma="__reactListeners$"+da,ga="__reactHandles$"+da;function ya(e){var t=e[fa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[fa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[fa])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[fa]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ka(e){return e[pa]||null}var Sa=[],xa=-1;function Ea(e){return{current:e}}function Ca(e){0>xa||(e.current=Sa[xa],Sa[xa]=null,xa--)}function Na(e,t){xa++,Sa[xa]=e.current,e.current=t}var _a={},La=Ea(_a),Ra=Ea(!1),Ta=_a;function Pa(e,t){var n=e.type.contextTypes;if(!n)return _a;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Da(e){return null!=e.childContextTypes}function Oa(){Ca(Ra),Ca(La)}function za(e,t,n){if(La.current!==_a)throw Error(o(168));Na(La,t),Na(Ra,n)}function Ma(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,W(e)||"Unknown",a));return F({},n,r)}function Ia(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_a,Ta=La.current,Na(La,e),Na(Ra,Ra.current),!0}function Fa(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Ma(e,t,Ta),r.__reactInternalMemoizedMergedChildContext=e,Ca(Ra),Ca(La),Na(La,e)):Ca(Ra),Na(Ra,n)}var Aa=null,ja=!1,Ua=!1;function Ba(e){null===Aa?Aa=[e]:Aa.push(e)}function Va(){if(!Ua&&null!==Aa){Ua=!0;var e=0,t=bt;try{var n=Aa;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Aa=null,ja=!1}catch(t){throw null!==Aa&&(Aa=Aa.slice(e+1)),Ye(Ze,Va),t}finally{bt=t,Ua=!1}}return null}var Wa=[],Ha=0,$a=null,Qa=0,Ya=[],Ka=0,qa=null,Xa=1,Ga="";function Ja(e,t){Wa[Ha++]=Qa,Wa[Ha++]=$a,$a=e,Qa=t}function Za(e,t,n){Ya[Ka++]=Xa,Ya[Ka++]=Ga,Ya[Ka++]=qa,qa=e;var r=Xa;e=Ga;var a=32-lt(r)-1;r&=~(1<<a),n+=1;var o=32-lt(t)+a;if(30<o){var l=a-a%5;o=(r&(1<<l)-1).toString(32),r>>=l,a-=l,Xa=1<<32-lt(t)+a|n<<a|r,Ga=o+e}else Xa=1<<o|n<<a|r,Ga=e}function eo(e){null!==e.return&&(Ja(e,1),Za(e,1,0))}function to(e){for(;e===$a;)$a=Wa[--Ha],Wa[Ha]=null,Qa=Wa[--Ha],Wa[Ha]=null;for(;e===qa;)qa=Ya[--Ka],Ya[Ka]=null,Ga=Ya[--Ka],Ya[Ka]=null,Xa=Ya[--Ka],Ya[Ka]=null}var no=null,ro=null,ao=!1,oo=null;function lo(e,t){var n=Ds(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=sa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==qa?{id:Xa,overflow:Ga}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ds(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function uo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function so(e){if(ao){var t=ro;if(t){var n=t;if(!io(e,t)){if(uo(e))throw Error(o(418));t=sa(n.nextSibling);var r=no;t&&io(e,t)?lo(r,n):(e.flags=-4097&e.flags|2,ao=!1,no=e)}}else{if(uo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,no=e}}}function co(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function fo(e){if(e!==no)return!1;if(!ao)return co(e),ao=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ro)){if(uo(e))throw po(),Error(o(418));for(;t;)lo(e,t),t=sa(t.nextSibling)}if(co(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=sa(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?sa(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=sa(e.nextSibling)}function ho(){ro=no=null,ao=!1}function vo(e){null===oo?oo=[e]:oo.push(e)}var mo=w.ReactCurrentBatchConfig;function go(e,t){if(e&&e.defaultProps){for(var n in t=F({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var yo=Ea(null),bo=null,wo=null,ko=null;function So(){ko=wo=bo=null}function xo(e){var t=yo.current;Ca(yo),e._currentValue=t}function Eo(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Co(e,t){bo=e,ko=wo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wi=!0),e.firstContext=null)}function No(e){var t=e._currentValue;if(ko!==e)if(e={context:e,memoizedValue:t,next:null},null===wo){if(null===bo)throw Error(o(308));wo=e,bo.dependencies={lanes:0,firstContext:e}}else wo=wo.next=e;return t}var _o=null;function Lo(e){null===_o?_o=[e]:_o.push(e)}function Ro(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Lo(t)):(n.next=a.next,a.next=n),t.interleaved=n,To(e,r)}function To(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Po=!1;function Do(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Oo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Mo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ru)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,To(e,n)}return null===(a=r.interleaved)?(t.next=t,Lo(r)):(t.next=a.next,a.next=t),r.interleaved=t,To(e,n)}function Io(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Fo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ao(e,t,n,r){var a=e.updateQueue;Po=!1;var o=a.firstBaseUpdate,l=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var u=i,s=u.next;u.next=null,null===l?o=s:l.next=s,l=u;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==l&&(null===i?c.firstBaseUpdate=s:i.next=s,c.lastBaseUpdate=u)}if(null!==o){var d=a.baseState;for(l=0,c=s=u=null,i=o;;){var f=i.lane,p=i.eventTime;if((r&f)===f){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,v=i;switch(f=t,p=n,v.tag){case 1:if("function"==typeof(h=v.payload)){d=h.call(p,d,f);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(f="function"==typeof(h=v.payload)?h.call(p,d,f):h))break e;d=F({},d,f);break e;case 2:Po=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(f=a.effects)?a.effects=[i]:f.push(i))}else p={eventTime:p,lane:f,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(s=c=p,u=d):c=c.next=p,l|=f;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(f=i).next,f.next=null,a.lastBaseUpdate=f,a.shared.pending=null}}if(null===c&&(u=d),a.baseState=u,a.firstBaseUpdate=s,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{l|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Fu|=l,e.lanes=l,e.memoizedState=d}}function jo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Uo=(new r.Component).refs;function Bo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:F({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Vo={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),o=zo(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=Mo(e,o,a))&&(rs(t,e,a,r),Io(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),o=zo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=Mo(e,o,a))&&(rs(t,e,a,r),Io(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ts(),r=ns(e),a=zo(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=Mo(e,a,r))&&(rs(t,e,r,n),Io(t,e,r))}};function Wo(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,o))}function Ho(e,t,n){var r=!1,a=_a,o=t.contextType;return"object"==typeof o&&null!==o?o=No(o):(a=Da(t)?Ta:La.current,o=(r=null!=(r=t.contextTypes))?Pa(e,a):_a),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Vo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function $o(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Vo.enqueueReplaceState(t,t.state,null)}function Qo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Uo,Do(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=No(o):(o=Da(t)?Ta:La.current,a.context=Pa(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(Bo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Vo.enqueueReplaceState(a,a.state,null),Ao(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Yo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=a.refs;t===Uo&&(t=a.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Ko(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function qo(e){return(0,e._init)(e._payload)}function Xo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=zs(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=As(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){var o=n.type;return o===x?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===D&&qo(o)===t.type)?((r=a(t,n.props)).ref=Yo(e,t,n),r.return=e,r):((r=Ms(n.type,n.key,n.props,null,e.mode,r)).ref=Yo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=js(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Is(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=As(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Ms(t.type,t.key,t.props,null,e.mode,n)).ref=Yo(e,null,t),n.return=e,n;case S:return(t=js(t,e.mode,n)).return=e,t;case D:return f(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Is(t,e.mode,n,null)).return=e,t;Ko(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?s(e,t,n,r):null;case S:return n.key===a?c(e,t,n,r):null;case D:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||M(n))return null!==a?null:d(e,t,n,r,null);Ko(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case D:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||M(r))return d(t,e=e.get(n)||null,r,a,null);Ko(t,r)}return null}function v(a,o,i,u){for(var s=null,c=null,d=o,v=o=0,m=null;null!==d&&v<i.length;v++){d.index>v?(m=d,d=null):m=d.sibling;var g=p(a,d,i[v],u);if(null===g){null===d&&(d=m);break}e&&d&&null===g.alternate&&t(a,d),o=l(g,o,v),null===c?s=g:c.sibling=g,c=g,d=m}if(v===i.length)return n(a,d),ao&&Ja(a,v),s;if(null===d){for(;v<i.length;v++)null!==(d=f(a,i[v],u))&&(o=l(d,o,v),null===c?s=d:c.sibling=d,c=d);return ao&&Ja(a,v),s}for(d=r(a,d);v<i.length;v++)null!==(m=h(d,a,v,i[v],u))&&(e&&null!==m.alternate&&d.delete(null===m.key?v:m.key),o=l(m,o,v),null===c?s=m:c.sibling=m,c=m);return e&&d.forEach((function(e){return t(a,e)})),ao&&Ja(a,v),s}function m(a,i,u,s){var c=M(u);if("function"!=typeof c)throw Error(o(150));if(null==(u=c.call(u)))throw Error(o(151));for(var d=c=null,v=i,m=i=0,g=null,y=u.next();null!==v&&!y.done;m++,y=u.next()){v.index>m?(g=v,v=null):g=v.sibling;var b=p(a,v,y.value,s);if(null===b){null===v&&(v=g);break}e&&v&&null===b.alternate&&t(a,v),i=l(b,i,m),null===d?c=b:d.sibling=b,d=b,v=g}if(y.done)return n(a,v),ao&&Ja(a,m),c;if(null===v){for(;!y.done;m++,y=u.next())null!==(y=f(a,y.value,s))&&(i=l(y,i,m),null===d?c=y:d.sibling=y,d=y);return ao&&Ja(a,m),c}for(v=r(a,v);!y.done;m++,y=u.next())null!==(y=h(v,a,m,y.value,s))&&(e&&null!==y.alternate&&v.delete(null===y.key?m:y.key),i=l(y,i,m),null===d?c=y:d.sibling=y,d=y);return e&&v.forEach((function(e){return t(a,e)})),ao&&Ja(a,m),c}return function e(r,o,l,u){if("object"==typeof l&&null!==l&&l.type===x&&null===l.key&&(l=l.props.children),"object"==typeof l&&null!==l){switch(l.$$typeof){case k:e:{for(var s=l.key,c=o;null!==c;){if(c.key===s){if((s=l.type)===x){if(7===c.tag){n(r,c.sibling),(o=a(c,l.props.children)).return=r,r=o;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===D&&qo(s)===c.type){n(r,c.sibling),(o=a(c,l.props)).ref=Yo(r,c,l),o.return=r,r=o;break e}n(r,c);break}t(r,c),c=c.sibling}l.type===x?((o=Is(l.props.children,r.mode,u,l.key)).return=r,r=o):((u=Ms(l.type,l.key,l.props,null,r.mode,u)).ref=Yo(r,o,l),u.return=r,r=u)}return i(r);case S:e:{for(c=l.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===l.containerInfo&&o.stateNode.implementation===l.implementation){n(r,o.sibling),(o=a(o,l.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=js(l,r.mode,u)).return=r,r=o}return i(r);case D:return e(r,o,(c=l._init)(l._payload),u)}if(te(l))return v(r,o,l,u);if(M(l))return m(r,o,l,u);Ko(r,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,l)).return=r,r=o):(n(r,o),(o=As(l,r.mode,u)).return=r,r=o),i(r)):n(r,o)}}var Go=Xo(!0),Jo=Xo(!1),Zo={},el=Ea(Zo),tl=Ea(Zo),nl=Ea(Zo);function rl(e){if(e===Zo)throw Error(o(174));return e}function al(e,t){switch(Na(nl,t),Na(tl,e),Na(el,Zo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ca(el),Na(el,t)}function ol(){Ca(el),Ca(tl),Ca(nl)}function ll(e){rl(nl.current);var t=rl(el.current),n=ue(t,e.type);t!==n&&(Na(tl,e),Na(el,n))}function il(e){tl.current===e&&(Ca(el),Ca(tl))}var ul=Ea(0);function sl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var cl=[];function dl(){for(var e=0;e<cl.length;e++)cl[e]._workInProgressVersionPrimary=null;cl.length=0}var fl=w.ReactCurrentDispatcher,pl=w.ReactCurrentBatchConfig,hl=0,vl=null,ml=null,gl=null,yl=!1,bl=!1,wl=0,kl=0;function Sl(){throw Error(o(321))}function xl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function El(e,t,n,r,a,l){if(hl=l,vl=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fl.current=null===e||null===e.memoizedState?ii:ui,e=n(r,a),bl){l=0;do{if(bl=!1,wl=0,25<=l)throw Error(o(301));l+=1,gl=ml=null,t.updateQueue=null,fl.current=si,e=n(r,a)}while(bl)}if(fl.current=li,t=null!==ml&&null!==ml.next,hl=0,gl=ml=vl=null,yl=!1,t)throw Error(o(300));return e}function Cl(){var e=0!==wl;return wl=0,e}function Nl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gl?vl.memoizedState=gl=e:gl=gl.next=e,gl}function _l(){if(null===ml){var e=vl.alternate;e=null!==e?e.memoizedState:null}else e=ml.next;var t=null===gl?vl.memoizedState:gl.next;if(null!==t)gl=t,ml=e;else{if(null===e)throw Error(o(310));e={memoizedState:(ml=e).memoizedState,baseState:ml.baseState,baseQueue:ml.baseQueue,queue:ml.queue,next:null},null===gl?vl.memoizedState=gl=e:gl=gl.next=e}return gl}function Ll(e,t){return"function"==typeof t?t(e):t}function Rl(e){var t=_l(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=ml,a=r.baseQueue,l=n.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,n.pending=null}if(null!==a){l=a.next,r=r.baseState;var u=i=null,s=null,c=l;do{var d=c.lane;if((hl&d)===d)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var f={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=f,i=r):s=s.next=f,vl.lanes|=d,Fu|=d}c=c.next}while(null!==c&&c!==l);null===s?i=r:s.next=u,ir(r,t.memoizedState)||(wi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{l=a.lane,vl.lanes|=l,Fu|=l,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Tl(e){var t=_l(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,l=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);ir(l,t.memoizedState)||(wi=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function Pl(){}function Dl(e,t){var n=vl,r=_l(),a=t(),l=!ir(r.memoizedState,a);if(l&&(r.memoizedState=a,wi=!0),r=r.queue,Hl(Ml.bind(null,n,r,e),[e]),r.getSnapshot!==t||l||null!==gl&&1&gl.memoizedState.tag){if(n.flags|=2048,jl(9,zl.bind(null,n,r,a,t),void 0,null),null===Tu)throw Error(o(349));0!=(30&hl)||Ol(n,t,a)}return a}function Ol(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=vl.updateQueue)?(t={lastEffect:null,stores:null},vl.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function zl(e,t,n,r){t.value=n,t.getSnapshot=r,Il(t)&&Fl(e)}function Ml(e,t,n){return n((function(){Il(t)&&Fl(e)}))}function Il(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Fl(e){var t=To(e,1);null!==t&&rs(t,e,1,-1)}function Al(e){var t=Nl();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ll,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,vl,e),[t.memoizedState,e]}function jl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=vl.updateQueue)?(t={lastEffect:null,stores:null},vl.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ul(){return _l().memoizedState}function Bl(e,t,n,r){var a=Nl();vl.flags|=e,a.memoizedState=jl(1|t,n,void 0,void 0===r?null:r)}function Vl(e,t,n,r){var a=_l();r=void 0===r?null:r;var o=void 0;if(null!==ml){var l=ml.memoizedState;if(o=l.destroy,null!==r&&xl(r,l.deps))return void(a.memoizedState=jl(t,n,o,r))}vl.flags|=e,a.memoizedState=jl(1|t,n,o,r)}function Wl(e,t){return Bl(8390656,8,e,t)}function Hl(e,t){return Vl(2048,8,e,t)}function $l(e,t){return Vl(4,2,e,t)}function Ql(e,t){return Vl(4,4,e,t)}function Yl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Kl(e,t,n){return n=null!=n?n.concat([e]):null,Vl(4,4,Yl.bind(null,t,e),n)}function ql(){}function Xl(e,t){var n=_l();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Gl(e,t){var n=_l();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Jl(e,t,n){return 0==(21&hl)?(e.baseState&&(e.baseState=!1,wi=!0),e.memoizedState=n):(ir(n,t)||(n=vt(),vl.lanes|=n,Fu|=n,e.baseState=!0),t)}function Zl(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=pl.transition;pl.transition={};try{e(!1),t()}finally{bt=n,pl.transition=r}}function ei(){return _l().memoizedState}function ti(e,t,n){var r=ns(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ri(e)?ai(t,n):null!==(n=Ro(e,t,n,r))&&(rs(n,e,r,ts()),oi(n,t,r))}function ni(e,t,n){var r=ns(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ri(e))ai(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var l=t.lastRenderedState,i=o(l,n);if(a.hasEagerState=!0,a.eagerState=i,ir(i,l)){var u=t.interleaved;return null===u?(a.next=a,Lo(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Ro(e,t,a,r))&&(rs(n,e,r,a=ts()),oi(n,t,r))}}function ri(e){var t=e.alternate;return e===vl||null!==t&&t===vl}function ai(e,t){bl=yl=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function oi(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var li={readContext:No,useCallback:Sl,useContext:Sl,useEffect:Sl,useImperativeHandle:Sl,useInsertionEffect:Sl,useLayoutEffect:Sl,useMemo:Sl,useReducer:Sl,useRef:Sl,useState:Sl,useDebugValue:Sl,useDeferredValue:Sl,useTransition:Sl,useMutableSource:Sl,useSyncExternalStore:Sl,useId:Sl,unstable_isNewReconciler:!1},ii={readContext:No,useCallback:function(e,t){return Nl().memoizedState=[e,void 0===t?null:t],e},useContext:No,useEffect:Wl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Bl(4194308,4,Yl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Bl(4194308,4,e,t)},useInsertionEffect:function(e,t){return Bl(4,2,e,t)},useMemo:function(e,t){var n=Nl();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Nl();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ti.bind(null,vl,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Nl().memoizedState=e},useState:Al,useDebugValue:ql,useDeferredValue:function(e){return Nl().memoizedState=e},useTransition:function(){var e=Al(!1),t=e[0];return e=Zl.bind(null,e[1]),Nl().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=vl,a=Nl();if(ao){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Tu)throw Error(o(349));0!=(30&hl)||Ol(r,t,n)}a.memoizedState=n;var l={value:n,getSnapshot:t};return a.queue=l,Wl(Ml.bind(null,r,l,e),[e]),r.flags|=2048,jl(9,zl.bind(null,r,l,n,t),void 0,null),n},useId:function(){var e=Nl(),t=Tu.identifierPrefix;if(ao){var n=Ga;t=":"+t+"R"+(n=(Xa&~(1<<32-lt(Xa)-1)).toString(32)+n),0<(n=wl++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=kl++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ui={readContext:No,useCallback:Xl,useContext:No,useEffect:Hl,useImperativeHandle:Kl,useInsertionEffect:$l,useLayoutEffect:Ql,useMemo:Gl,useReducer:Rl,useRef:Ul,useState:function(){return Rl(Ll)},useDebugValue:ql,useDeferredValue:function(e){return Jl(_l(),ml.memoizedState,e)},useTransition:function(){return[Rl(Ll)[0],_l().memoizedState]},useMutableSource:Pl,useSyncExternalStore:Dl,useId:ei,unstable_isNewReconciler:!1},si={readContext:No,useCallback:Xl,useContext:No,useEffect:Hl,useImperativeHandle:Kl,useInsertionEffect:$l,useLayoutEffect:Ql,useMemo:Gl,useReducer:Tl,useRef:Ul,useState:function(){return Tl(Ll)},useDebugValue:ql,useDeferredValue:function(e){var t=_l();return null===ml?t.memoizedState=e:Jl(t,ml.memoizedState,e)},useTransition:function(){return[Tl(Ll)[0],_l().memoizedState]},useMutableSource:Pl,useSyncExternalStore:Dl,useId:ei,unstable_isNewReconciler:!1};function ci(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function di(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fi(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function hi(e,t,n){(n=zo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$u||($u=!0,Qu=r),fi(0,t)},n}function vi(e,t,n){(n=zo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){fi(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){fi(0,t),"function"!=typeof r&&(null===Yu?Yu=new Set([this]):Yu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Ns.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=zo(-1,1)).tag=2,Mo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var bi=w.ReactCurrentOwner,wi=!1;function ki(e,t,n,r){t.child=null===e?Jo(t,null,n,r):Go(t,e.child,n,r)}function Si(e,t,n,r,a){n=n.render;var o=t.ref;return Co(t,a),r=El(e,t,n,r,o,a),n=Cl(),null===e||wi?(ao&&n&&eo(t),t.flags|=1,ki(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$i(e,t,a))}function xi(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Os(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ms(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ei(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var l=o.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(l,r)&&e.ref===t.ref)return $i(e,t,a)}return t.flags|=1,(e=zs(o,r)).ref=t.ref,e.return=t,t.child=e}function Ei(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(ur(o,r)&&e.ref===t.ref){if(wi=!1,t.pendingProps=r=o,0==(e.lanes&a))return t.lanes=e.lanes,$i(e,t,a);0!=(131072&e.flags)&&(wi=!0)}}return _i(e,t,n,r,a)}function Ci(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Na(zu,Ou),Ou|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Na(zu,Ou),Ou|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Na(zu,Ou),Ou|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Na(zu,Ou),Ou|=r;return ki(e,t,a,n),t.child}function Ni(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function _i(e,t,n,r,a){var o=Da(n)?Ta:La.current;return o=Pa(t,o),Co(t,a),n=El(e,t,n,r,o,a),r=Cl(),null===e||wi?(ao&&r&&eo(t),t.flags|=1,ki(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$i(e,t,a))}function Li(e,t,n,r,a){if(Da(n)){var o=!0;Ia(t)}else o=!1;if(Co(t,a),null===t.stateNode)Hi(e,t),Ho(t,n,r),Qo(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,s=n.contextType;s="object"==typeof s&&null!==s?No(s):Pa(t,s=Da(n)?Ta:La.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;d||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==s)&&$o(t,l,r,s),Po=!1;var f=t.memoizedState;l.state=f,Ao(t,r,l,a),u=t.memoizedState,i!==r||f!==u||Ra.current||Po?("function"==typeof c&&(Bo(t,n,c,r),u=t.memoizedState),(i=Po||Wo(t,n,i,r,f,u,s))?(d||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4194308)):("function"==typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=s,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4194308),r=!1)}else{l=t.stateNode,Oo(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:go(t.type,i),l.props=s,d=t.pendingProps,f=l.context,u="object"==typeof(u=n.contextType)&&null!==u?No(u):Pa(t,u=Da(n)?Ta:La.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==d||f!==u)&&$o(t,l,r,u),Po=!1,f=t.memoizedState,l.state=f,Ao(t,r,l,a);var h=t.memoizedState;i!==d||f!==h||Ra.current||Po?("function"==typeof p&&(Bo(t,n,p,r),h=t.memoizedState),(s=Po||Wo(t,n,s,r,f,h,u)||!1)?(c||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=s):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return Ri(e,t,n,r,o,a)}function Ri(e,t,n,r,a,o){Ni(e,t);var l=0!=(128&t.flags);if(!r&&!l)return a&&Fa(t,n,!1),$i(e,t,o);r=t.stateNode,bi.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Go(t,e.child,null,o),t.child=Go(t,null,i,o)):ki(e,t,i,o),t.memoizedState=r.state,a&&Fa(t,n,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?za(0,t.pendingContext,t.pendingContext!==t.context):t.context&&za(0,t.context,!1),al(e,t.containerInfo)}function Pi(e,t,n,r,a){return ho(),vo(a),t.flags|=256,ki(e,t,n,r),t.child}var Di,Oi,zi,Mi,Ii={dehydrated:null,treeContext:null,retryLane:0};function Fi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ai(e,t,n){var r,a=t.pendingProps,l=ul.current,i=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Na(ul,1&l),null===e)return so(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,i?(a=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Fs(u,a,0,null),e=Is(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Fi(n),t.memoizedState=Ii,e):ji(t,u));if(null!==(l=e.memoizedState)&&null!==(r=l.dehydrated))return function(e,t,n,r,a,l,i){if(n)return 256&t.flags?(t.flags&=-257,Ui(e,t,i,r=di(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(l=r.fallback,a=t.mode,r=Fs({mode:"visible",children:r.children},a,0,null),(l=Is(l,a,i,null)).flags|=2,r.return=t,l.return=t,r.sibling=l,t.child=r,0!=(1&t.mode)&&Go(t,e.child,null,i),t.child.memoizedState=Fi(i),t.memoizedState=Ii,l);if(0==(1&t.mode))return Ui(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Ui(e,t,i,r=di(l=Error(o(419)),r,void 0))}if(u=0!=(i&e.childLanes),wi||u){if(null!==(r=Tu)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|i))?0:a)&&a!==l.retryLane&&(l.retryLane=a,To(e,a),rs(r,e,a,-1))}return ms(),Ui(e,t,i,r=di(Error(o(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Ls.bind(null,e),a._reactRetry=t,null):(e=l.treeContext,ro=sa(a.nextSibling),no=t,ao=!0,oo=null,null!==e&&(Ya[Ka++]=Xa,Ya[Ka++]=Ga,Ya[Ka++]=qa,Xa=e.id,Ga=e.overflow,qa=t),(t=ji(t,r.children)).flags|=4096,t)}(e,t,u,a,r,l,n);if(i){i=a.fallback,u=t.mode,r=(l=e.child).sibling;var s={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==l?((a=t.child).childLanes=0,a.pendingProps=s,t.deletions=null):(a=zs(l,s)).subtreeFlags=14680064&l.subtreeFlags,null!==r?i=zs(r,i):(i=Is(i,u,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,u=null===(u=e.child.memoizedState)?Fi(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Ii,a}return e=(i=e.child).sibling,a=zs(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function ji(e,t){return(t=Fs({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ui(e,t,n,r){return null!==r&&vo(r),Go(t,e.child,null,n),(e=ji(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bi(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Eo(e.return,t,n)}function Vi(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Wi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(ki(e,t,r.children,n),0!=(2&(r=ul.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bi(e,n,t);else if(19===e.tag)Bi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Na(ul,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===sl(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Vi(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===sl(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Vi(t,!0,n,null,o);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Hi(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $i(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=zs(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=zs(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Qi(e,t){if(!ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Yi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ki(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Yi(t),null;case 1:case 17:return Da(t.type)&&Oa(),Yi(t),null;case 3:return r=t.stateNode,ol(),Ca(Ra),Ca(La),dl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(is(oo),oo=null))),Oi(e,t),Yi(t),null;case 5:il(t);var a=rl(nl.current);if(n=t.type,null!==e&&null!=t.stateNode)zi(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return Yi(t),null}if(e=rl(el.current),fo(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[fa]=t,r[pa]=l,e=0!=(1&t.mode),n){case"dialog":jr("cancel",r),jr("close",r);break;case"iframe":case"object":case"embed":jr("load",r);break;case"video":case"audio":for(a=0;a<Mr.length;a++)jr(Mr[a],r);break;case"source":jr("error",r);break;case"img":case"image":case"link":jr("error",r),jr("load",r);break;case"details":jr("toggle",r);break;case"input":X(r,l),jr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},jr("invalid",r);break;case"textarea":ae(r,l),jr("invalid",r)}for(var u in ye(n,l),a=null,l)if(l.hasOwnProperty(u)){var s=l[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,s,e),a=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,s,e),a=["children",""+s]):i.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&jr("scroll",r)}switch(n){case"input":Q(r),Z(r,l,!0);break;case"textarea":Q(r),le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Zr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[fa]=t,e[pa]=r,Di(e,t,!1,!1),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":jr("cancel",e),jr("close",e),a=r;break;case"iframe":case"object":case"embed":jr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Mr.length;a++)jr(Mr[a],e);a=r;break;case"source":jr("error",e),a=r;break;case"img":case"image":case"link":jr("error",e),jr("load",e),a=r;break;case"details":jr("toggle",e),a=r;break;case"input":X(e,r),a=q(e,r),jr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=F({},r,{value:void 0}),jr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),jr("invalid",e)}for(l in ye(n,a),s=a)if(s.hasOwnProperty(l)){var c=s[l];"style"===l?me(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===l?"string"==typeof c?("textarea"!==n||""!==c)&&fe(e,c):"number"==typeof c&&fe(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?null!=c&&"onScroll"===l&&jr("scroll",e):null!=c&&b(e,l,c,u))}switch(n){case"input":Q(e),Z(e,r,!1);break;case"textarea":Q(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+H(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ne(e,!!r.multiple,l,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Yi(t),null;case 6:if(e&&null!=t.stateNode)Mi(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=rl(nl.current),rl(el.current),fo(t)){if(r=t.stateNode,n=t.memoizedProps,r[fa]=t,(l=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Jr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,n,0!=(1&e.mode))}l&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[fa]=t,t.stateNode=r}return Yi(t),null;case 13:if(Ca(ul),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))po(),ho(),t.flags|=98560,l=!1;else if(l=fo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!l)throw Error(o(318));if(!(l=null!==(l=t.memoizedState)?l.dehydrated:null))throw Error(o(317));l[fa]=t}else ho(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Yi(t),l=!1}else null!==oo&&(is(oo),oo=null),l=!0;if(!l)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ul.current)?0===Mu&&(Mu=3):ms())),null!==t.updateQueue&&(t.flags|=4),Yi(t),null);case 4:return ol(),Oi(e,t),null===e&&Vr(t.stateNode.containerInfo),Yi(t),null;case 10:return xo(t.type._context),Yi(t),null;case 19:if(Ca(ul),null===(l=t.memoizedState))return Yi(t),null;if(r=0!=(128&t.flags),null===(u=l.rendering))if(r)Qi(l,!1);else{if(0!==Mu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=sl(e))){for(t.flags|=128,Qi(l,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=14680066,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Na(ul,1&ul.current|2),t.child}e=e.sibling}null!==l.tail&&Ge()>Wu&&(t.flags|=128,r=!0,Qi(l,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=sl(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Qi(l,!0),null===l.tail&&"hidden"===l.tailMode&&!u.alternate&&!ao)return Yi(t),null}else 2*Ge()-l.renderingStartTime>Wu&&1073741824!==n&&(t.flags|=128,r=!0,Qi(l,!1),t.lanes=4194304);l.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=l.last)?n.sibling=u:t.child=u,l.last=u)}return null!==l.tail?(t=l.tail,l.rendering=t,l.tail=t.sibling,l.renderingStartTime=Ge(),t.sibling=null,n=ul.current,Na(ul,r?1&n|2:1&n),t):(Yi(t),null);case 22:case 23:return fs(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Ou)&&(Yi(t),6&t.subtreeFlags&&(t.flags|=8192)):Yi(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function qi(e,t){switch(to(t),t.tag){case 1:return Da(t.type)&&Oa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ol(),Ca(Ra),Ca(La),dl(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return il(t),null;case 13:if(Ca(ul),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));ho()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ca(ul),null;case 4:return ol(),null;case 10:return xo(t.type._context),null;case 22:case 23:return fs(),null;default:return null}}Di=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Oi=function(){},zi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,rl(el.current);var o,l=null;switch(n){case"input":a=q(e,a),r=q(e,r),l=[];break;case"select":a=F({},a,{value:void 0}),r=F({},r,{value:void 0}),l=[];break;case"textarea":a=re(e,a),r=re(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Zr)}for(c in ye(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var u=a[c];for(o in u)u.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(o in u)!u.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&u[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(l||(l=[]),l.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(l=l||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(l=l||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&jr("scroll",e),l||u===s||(l=[])):(l=l||[]).push(c,s))}n&&(l=l||[]).push("style",n);var c=l;(t.updateQueue=c)&&(t.flags|=4)}},Mi=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xi=!1,Gi=!1,Ji="function"==typeof WeakSet?WeakSet:Set,Zi=null;function eu(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cs(e,t,n)}else n.current=null}function tu(e,t,n){try{n()}catch(n){Cs(e,t,n)}}var nu=!1;function ru(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&tu(t,n,o)}a=a.next}while(a!==r)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ou(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function lu(e){var t=e.alternate;null!==t&&(e.alternate=null,lu(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[fa],delete t[pa],delete t[va],delete t[ma],delete t[ga]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function uu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var du=null,fu=!1;function pu(e,t,n){for(n=n.child;null!==n;)hu(e,t,n),n=n.sibling}function hu(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Gi||eu(n,t);case 6:var r=du,a=fu;du=null,pu(e,t,n),fu=a,null!==(du=r)&&(fu?(e=du,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):du.removeChild(n.stateNode));break;case 18:null!==du&&(fu?(e=du,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Vt(e)):ua(du,n.stateNode));break;case 4:r=du,a=fu,du=n.stateNode.containerInfo,fu=!0,pu(e,t,n),du=r,fu=a;break;case 0:case 11:case 14:case 15:if(!Gi&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,l=o.destroy;o=o.tag,void 0!==l&&(0!=(2&o)||0!=(4&o))&&tu(n,t,l),a=a.next}while(a!==r)}pu(e,t,n);break;case 1:if(!Gi&&(eu(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cs(n,t,e)}pu(e,t,n);break;case 21:pu(e,t,n);break;case 22:1&n.mode?(Gi=(r=Gi)||null!==n.memoizedState,pu(e,t,n),Gi=r):pu(e,t,n);break;default:pu(e,t,n)}}function vu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ji),t.forEach((function(t){var r=Rs.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function mu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var l=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:du=u.stateNode,fu=!1;break e;case 3:case 4:du=u.stateNode.containerInfo,fu=!0;break e}u=u.return}if(null===du)throw Error(o(160));hu(l,i,a),du=null,fu=!1;var s=a.alternate;null!==s&&(s.return=null),a.return=null}catch(e){Cs(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),yu(e),4&r){try{ru(3,e,e.return),au(3,e)}catch(t){Cs(e,e.return,t)}try{ru(5,e,e.return)}catch(t){Cs(e,e.return,t)}}break;case 1:mu(t,e),yu(e),512&r&&null!==n&&eu(n,n.return);break;case 5:if(mu(t,e),yu(e),512&r&&null!==n&&eu(n,n.return),32&e.flags){var a=e.stateNode;try{fe(a,"")}catch(t){Cs(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var l=e.memoizedProps,i=null!==n?n.memoizedProps:l,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===l.type&&null!=l.name&&G(a,l),be(u,i);var c=be(u,l);for(i=0;i<s.length;i+=2){var d=s[i],f=s[i+1];"style"===d?me(a,f):"dangerouslySetInnerHTML"===d?de(a,f):"children"===d?fe(a,f):b(a,d,f,c)}switch(u){case"input":J(a,l);break;case"textarea":oe(a,l);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!l.multiple;var h=l.value;null!=h?ne(a,!!l.multiple,h,!1):p!==!!l.multiple&&(null!=l.defaultValue?ne(a,!!l.multiple,l.defaultValue,!0):ne(a,!!l.multiple,l.multiple?[]:"",!1))}a[pa]=l}catch(t){Cs(e,e.return,t)}}break;case 6:if(mu(t,e),yu(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,l=e.memoizedProps;try{a.nodeValue=l}catch(t){Cs(e,e.return,t)}}break;case 3:if(mu(t,e),yu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(t){Cs(e,e.return,t)}break;case 4:default:mu(t,e),yu(e);break;case 13:mu(t,e),yu(e),8192&(a=e.child).flags&&(l=null!==a.memoizedState,a.stateNode.isHidden=l,!l||null!==a.alternate&&null!==a.alternate.memoizedState||(Vu=Ge())),4&r&&vu(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Gi=(c=Gi)||d,mu(t,e),Gi=c):mu(t,e),yu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!=(1&e.mode))for(Zi=e,d=e.child;null!==d;){for(f=Zi=d;null!==Zi;){switch(h=(p=Zi).child,p.tag){case 0:case 11:case 14:case 15:ru(4,p,p.return);break;case 1:eu(p,p.return);var v=p.stateNode;if("function"==typeof v.componentWillUnmount){r=p,n=p.return;try{t=r,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(e){Cs(r,n,e)}}break;case 5:eu(p,p.return);break;case 22:if(null!==p.memoizedState){Su(f);continue}}null!==h?(h.return=p,Zi=h):Su(f)}d=d.sibling}e:for(d=null,f=e;;){if(5===f.tag){if(null===d){d=f;try{a=f.stateNode,c?"function"==typeof(l=a.style).setProperty?l.setProperty("display","none","important"):l.display="none":(u=f.stateNode,i=null!=(s=f.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=ve("display",i))}catch(t){Cs(e,e.return,t)}}}else if(6===f.tag){if(null===d)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(t){Cs(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:mu(t,e),yu(e),4&r&&vu(e);case 21:}}function yu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(fe(a,""),r.flags&=-33),cu(e,uu(e),a);break;case 3:case 4:var l=r.stateNode.containerInfo;su(e,uu(e),l);break;default:throw Error(o(161))}}catch(t){Cs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Zi=e,wu(e,t,n)}function wu(e,t,n){for(var r=0!=(1&e.mode);null!==Zi;){var a=Zi,o=a.child;if(22===a.tag&&r){var l=null!==a.memoizedState||Xi;if(!l){var i=a.alternate,u=null!==i&&null!==i.memoizedState||Gi;i=Xi;var s=Gi;if(Xi=l,(Gi=u)&&!s)for(Zi=a;null!==Zi;)u=(l=Zi).child,22===l.tag&&null!==l.memoizedState?xu(a):null!==u?(u.return=l,Zi=u):xu(a);for(;null!==o;)Zi=o,wu(o,t,n),o=o.sibling;Zi=a,Xi=i,Gi=s}ku(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Zi=o):ku(e)}}function ku(e){for(;null!==Zi;){var t=Zi;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Gi||au(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Gi)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:go(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var l=t.updateQueue;null!==l&&jo(t,l,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}jo(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var f=d.dehydrated;null!==f&&Vt(f)}}}break;default:throw Error(o(163))}Gi||512&t.flags&&ou(t)}catch(e){Cs(t,t.return,e)}}if(t===e){Zi=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zi=n;break}Zi=t.return}}function Su(e){for(;null!==Zi;){var t=Zi;if(t===e){Zi=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zi=n;break}Zi=t.return}}function xu(e){for(;null!==Zi;){var t=Zi;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(e){Cs(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cs(t,a,e)}}var o=t.return;try{ou(t)}catch(e){Cs(t,o,e)}break;case 5:var l=t.return;try{ou(t)}catch(e){Cs(t,l,e)}}}catch(e){Cs(t,t.return,e)}if(t===e){Zi=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Zi=i;break}Zi=t.return}}var Eu,Cu=Math.ceil,Nu=w.ReactCurrentDispatcher,_u=w.ReactCurrentOwner,Lu=w.ReactCurrentBatchConfig,Ru=0,Tu=null,Pu=null,Du=0,Ou=0,zu=Ea(0),Mu=0,Iu=null,Fu=0,Au=0,ju=0,Uu=null,Bu=null,Vu=0,Wu=1/0,Hu=null,$u=!1,Qu=null,Yu=null,Ku=!1,qu=null,Xu=0,Gu=0,Ju=null,Zu=-1,es=0;function ts(){return 0!=(6&Ru)?Ge():-1!==Zu?Zu:Zu=Ge()}function ns(e){return 0==(1&e.mode)?1:0!=(2&Ru)&&0!==Du?Du&-Du:null!==mo.transition?(0===es&&(es=vt()),es):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Xt(e.type)}function rs(e,t,n,r){if(50<Gu)throw Gu=0,Ju=null,Error(o(185));gt(e,n,r),0!=(2&Ru)&&e===Tu||(e===Tu&&(0==(2&Ru)&&(Au|=n),4===Mu&&us(e,Du)),as(e,r),1===n&&0===Ru&&0==(1&t.mode)&&(Wu=Ge()+500,ja&&Va()))}function as(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-lt(o),i=1<<l,u=a[l];-1===u?0!=(i&n)&&0==(i&r)||(a[l]=pt(i,t)):u<=t&&(e.expiredLanes|=i),o&=~i}}(e,t);var r=ft(e,e===Tu?Du:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){ja=!0,Ba(e)}(ss.bind(null,e)):Ba(ss.bind(null,e)),la((function(){0==(6&Ru)&&Va()})),n=null;else{switch(wt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ts(n,os.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function os(e,t){if(Zu=-1,es=0,0!=(6&Ru))throw Error(o(327));var n=e.callbackNode;if(xs()&&e.callbackNode!==n)return null;var r=ft(e,e===Tu?Du:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var a=Ru;Ru|=2;var l=vs();for(Tu===e&&Du===t||(Hu=null,Wu=Ge()+500,ps(e,t));;)try{bs();break}catch(t){hs(e,t)}So(),Nu.current=l,Ru=a,null!==Pu?t=0:(Tu=null,Du=0,t=Mu)}if(0!==t){if(2===t&&0!==(a=ht(e))&&(r=a,t=ls(e,a)),1===t)throw n=Iu,ps(e,0),us(e,r),as(e,Ge()),n;if(6===t)us(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!ir(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gs(e,r))&&0!==(l=ht(e))&&(r=l,t=ls(e,l)),1===t))throw n=Iu,ps(e,0),us(e,r),as(e,Ge()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:Ss(e,Bu,Hu);break;case 3:if(us(e,r),(130023424&r)===r&&10<(t=Vu+500-Ge())){if(0!==ft(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ts(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Ss.bind(null,e,Bu,Hu),t);break}Ss(e,Bu,Hu);break;case 4:if(us(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-lt(r);l=1<<i,(i=t[i])>a&&(a=i),r&=~l}if(r=a,10<(r=(120>(r=Ge()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=ra(Ss.bind(null,e,Bu,Hu),r);break}Ss(e,Bu,Hu);break;default:throw Error(o(329))}}}return as(e,Ge()),e.callbackNode===n?os.bind(null,e):null}function ls(e,t){var n=Uu;return e.current.memoizedState.isDehydrated&&(ps(e,t).flags|=256),2!==(e=gs(e,t))&&(t=Bu,Bu=n,null!==t&&is(t)),e}function is(e){null===Bu?Bu=e:Bu.push.apply(Bu,e)}function us(e,t){for(t&=~ju,t&=~Au,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),r=1<<n;e[n]=-1,t&=~r}}function ss(e){if(0!=(6&Ru))throw Error(o(327));xs();var t=ft(e,0);if(0==(1&t))return as(e,Ge()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=ls(e,r))}if(1===n)throw n=Iu,ps(e,0),us(e,t),as(e,Ge()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ss(e,Bu,Hu),as(e,Ge()),null}function cs(e,t){var n=Ru;Ru|=1;try{return e(t)}finally{0===(Ru=n)&&(Wu=Ge()+500,ja&&Va())}}function ds(e){null!==qu&&0===qu.tag&&0==(6&Ru)&&xs();var t=Ru;Ru|=1;var n=Lu.transition,r=bt;try{if(Lu.transition=null,bt=1,e)return e()}finally{bt=r,Lu.transition=n,0==(6&(Ru=t))&&Va()}}function fs(){Ou=zu.current,Ca(zu)}function ps(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Pu)for(n=Pu.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Oa();break;case 3:ol(),Ca(Ra),Ca(La),dl();break;case 5:il(r);break;case 4:ol();break;case 13:case 19:Ca(ul);break;case 10:xo(r.type._context);break;case 22:case 23:fs()}n=n.return}if(Tu=e,Pu=e=zs(e.current,null),Du=Ou=t,Mu=0,Iu=null,ju=Au=Fu=0,Bu=Uu=null,null!==_o){for(t=0;t<_o.length;t++)if(null!==(r=(n=_o[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var l=o.next;o.next=a,r.next=l}n.pending=r}_o=null}return e}function hs(e,t){for(;;){var n=Pu;try{if(So(),fl.current=li,yl){for(var r=vl.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}yl=!1}if(hl=0,gl=ml=vl=null,bl=!1,wl=0,_u.current=null,null===n||null===n.return){Mu=1,Iu=t,Pu=null;break}e:{var l=e,i=n.return,u=n,s=t;if(t=Du,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,d=u,f=d.tag;if(0==(1&d.mode)&&(0===f||11===f||15===f)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=gi(i);if(null!==h){h.flags&=-257,yi(h,i,u,0,t),1&h.mode&&mi(l,c,t),s=c;var v=(t=h).updateQueue;if(null===v){var m=new Set;m.add(s),t.updateQueue=m}else v.add(s);break e}if(0==(1&t)){mi(l,c,t),ms();break e}s=Error(o(426))}else if(ao&&1&u.mode){var g=gi(i);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),yi(g,i,u,0,t),vo(ci(s,u));break e}}l=s=ci(s,u),4!==Mu&&(Mu=2),null===Uu?Uu=[l]:Uu.push(l),l=i;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,Fo(l,hi(0,s,t));break e;case 1:u=s;var y=l.type,b=l.stateNode;if(0==(128&l.flags)&&("function"==typeof y.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Yu||!Yu.has(b)))){l.flags|=65536,t&=-t,l.lanes|=t,Fo(l,vi(l,u,t));break e}}l=l.return}while(null!==l)}ks(n)}catch(e){t=e,Pu===n&&null!==n&&(Pu=n=n.return);continue}break}}function vs(){var e=Nu.current;return Nu.current=li,null===e?li:e}function ms(){0!==Mu&&3!==Mu&&2!==Mu||(Mu=4),null===Tu||0==(268435455&Fu)&&0==(268435455&Au)||us(Tu,Du)}function gs(e,t){var n=Ru;Ru|=2;var r=vs();for(Tu===e&&Du===t||(Hu=null,ps(e,t));;)try{ys();break}catch(t){hs(e,t)}if(So(),Ru=n,Nu.current=r,null!==Pu)throw Error(o(261));return Tu=null,Du=0,Mu}function ys(){for(;null!==Pu;)ws(Pu)}function bs(){for(;null!==Pu&&!qe();)ws(Pu)}function ws(e){var t=Eu(e.alternate,e,Ou);e.memoizedProps=e.pendingProps,null===t?ks(e):Pu=t,_u.current=null}function ks(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Ki(n,t,Ou)))return void(Pu=n)}else{if(null!==(n=qi(n,t)))return n.flags&=32767,void(Pu=n);if(null===e)return Mu=6,void(Pu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Pu=t);Pu=t=e}while(null!==t);0===Mu&&(Mu=5)}function Ss(e,t,n){var r=bt,a=Lu.transition;try{Lu.transition=null,bt=1,function(e,t,n,r){do{xs()}while(null!==qu);if(0!=(6&Ru))throw Error(o(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var l=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-lt(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,l),e===Tu&&(Pu=Tu=null,Du=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Ku||(Ku=!0,Ts(tt,(function(){return xs(),null}))),l=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||l){l=Lu.transition,Lu.transition=null;var i=bt;bt=1;var u=Ru;Ru|=4,_u.current=null,function(e,t){if(ea=Ht,pr(e=fr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,l=r.focusNode;r=r.focusOffset;try{n.nodeType,l.nodeType}catch(e){n=null;break e}var i=0,u=-1,s=-1,c=0,d=0,f=e,p=null;t:for(;;){for(var h;f!==n||0!==a&&3!==f.nodeType||(u=i+a),f!==l||0!==r&&3!==f.nodeType||(s=i+r),3===f.nodeType&&(i+=f.nodeValue.length),null!==(h=f.firstChild);)p=f,f=h;for(;;){if(f===e)break t;if(p===n&&++c===a&&(u=i),p===l&&++d===r&&(s=i),null!==(h=f.nextSibling))break;p=(f=p).parentNode}f=h}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Ht=!1,Zi=t;null!==Zi;)if(e=(t=Zi).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Zi=e;else for(;null!==Zi;){t=Zi;try{var v=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==v){var m=v.memoizedProps,g=v.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?m:go(t.type,m),g);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(o(163))}}catch(e){Cs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zi=e;break}Zi=t.return}v=nu,nu=!1}(e,n),gu(n,e),hr(ta),Ht=!!ea,ta=ea=null,e.current=n,bu(n,e,a),Xe(),Ru=u,bt=i,Lu.transition=l}else e.current=n;if(Ku&&(Ku=!1,qu=e,Xu=a),0===(l=e.pendingLanes)&&(Yu=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),as(e,Ge()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if($u)throw $u=!1,e=Qu,Qu=null,e;0!=(1&Xu)&&0!==e.tag&&xs(),0!=(1&(l=e.pendingLanes))?e===Ju?Gu++:(Gu=0,Ju=e):Gu=0,Va()}(e,t,n,r)}finally{Lu.transition=a,bt=r}return null}function xs(){if(null!==qu){var e=wt(Xu),t=Lu.transition,n=bt;try{if(Lu.transition=null,bt=16>e?16:e,null===qu)var r=!1;else{if(e=qu,qu=null,Xu=0,0!=(6&Ru))throw Error(o(331));var a=Ru;for(Ru|=4,Zi=e.current;null!==Zi;){var l=Zi,i=l.child;if(0!=(16&Zi.flags)){var u=l.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Zi=c;null!==Zi;){var d=Zi;switch(d.tag){case 0:case 11:case 15:ru(8,d,l)}var f=d.child;if(null!==f)f.return=d,Zi=f;else for(;null!==Zi;){var p=(d=Zi).sibling,h=d.return;if(lu(d),d===c){Zi=null;break}if(null!==p){p.return=h,Zi=p;break}Zi=h}}}var v=l.alternate;if(null!==v){var m=v.child;if(null!==m){v.child=null;do{var g=m.sibling;m.sibling=null,m=g}while(null!==m)}}Zi=l}}if(0!=(2064&l.subtreeFlags)&&null!==i)i.return=l,Zi=i;else e:for(;null!==Zi;){if(0!=(2048&(l=Zi).flags))switch(l.tag){case 0:case 11:case 15:ru(9,l,l.return)}var y=l.sibling;if(null!==y){y.return=l.return,Zi=y;break e}Zi=l.return}}var b=e.current;for(Zi=b;null!==Zi;){var w=(i=Zi).child;if(0!=(2064&i.subtreeFlags)&&null!==w)w.return=i,Zi=w;else e:for(i=b;null!==Zi;){if(0!=(2048&(u=Zi).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(e){Cs(u,u.return,e)}if(u===i){Zi=null;break e}var k=u.sibling;if(null!==k){k.return=u.return,Zi=k;break e}Zi=u.return}}if(Ru=a,Va(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,Lu.transition=t}}return!1}function Es(e,t,n){e=Mo(e,t=hi(0,t=ci(n,t),1),1),t=ts(),null!==e&&(gt(e,1,t),as(e,t))}function Cs(e,t,n){if(3===e.tag)Es(e,e,n);else for(;null!==t;){if(3===t.tag){Es(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yu||!Yu.has(r))){t=Mo(t,e=vi(t,e=ci(n,e),1),1),e=ts(),null!==t&&(gt(t,1,e),as(t,e));break}}t=t.return}}function Ns(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ts(),e.pingedLanes|=e.suspendedLanes&n,Tu===e&&(Du&n)===n&&(4===Mu||3===Mu&&(130023424&Du)===Du&&500>Ge()-Vu?ps(e,0):ju|=n),as(e,t)}function _s(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=ts();null!==(e=To(e,t))&&(gt(e,t,n),as(e,n))}function Ls(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),_s(e,n)}function Rs(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),_s(e,n)}function Ts(e,t){return Ye(e,t)}function Ps(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ds(e,t,n,r){return new Ps(e,t,n,r)}function Os(e){return!(!(e=e.prototype)||!e.isReactComponent)}function zs(e,t){var n=e.alternate;return null===n?((n=Ds(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ms(e,t,n,r,a,l){var i=2;if(r=e,"function"==typeof e)Os(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Is(n.children,a,l,t);case E:i=8,a|=8;break;case C:return(e=Ds(12,n,t,2|a)).elementType=C,e.lanes=l,e;case R:return(e=Ds(13,n,t,a)).elementType=R,e.lanes=l,e;case T:return(e=Ds(19,n,t,a)).elementType=T,e.lanes=l,e;case O:return Fs(n,a,l,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case _:i=9;break e;case L:i=11;break e;case P:i=14;break e;case D:i=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Ds(i,n,t,a)).elementType=e,t.type=r,t.lanes=l,t}function Is(e,t,n,r){return(e=Ds(7,e,r,t)).lanes=n,e}function Fs(e,t,n,r){return(e=Ds(22,e,r,t)).elementType=O,e.lanes=n,e.stateNode={isHidden:!1},e}function As(e,t,n){return(e=Ds(6,e,null,t)).lanes=n,e}function js(e,t,n){return(t=Ds(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Us(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mt(0),this.expirationTimes=mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Bs(e,t,n,r,a,o,l,i,u){return e=new Us(e,t,n,i,u),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Ds(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Do(o),e}function Vs(e){if(!e)return _a;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Da(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Da(n))return Ma(e,n,t)}return t}function Ws(e,t,n,r,a,o,l,i,u){return(e=Bs(n,r,!0,e,0,o,0,i,u)).context=Vs(null),n=e.current,(o=zo(r=ts(),a=ns(n))).callback=null!=t?t:null,Mo(n,o,a),e.current.lanes=a,gt(e,a,r),as(e,r),e}function Hs(e,t,n,r){var a=t.current,o=ts(),l=ns(a);return n=Vs(n),null===t.context?t.context=n:t.pendingContext=n,(t=zo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Mo(a,t,l))&&(rs(e,a,l,o),Io(e,a,l)),l}function $s(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ys(e,t){Qs(e,t),(e=e.alternate)&&Qs(e,t)}Eu=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ra.current)wi=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wi=!1,function(e,t,n){switch(t.tag){case 3:Ti(t),ho();break;case 5:ll(t);break;case 1:Da(t.type)&&Ia(t);break;case 4:al(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Na(yo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Na(ul,1&ul.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Ai(e,t,n):(Na(ul,1&ul.current),null!==(e=$i(e,t,n))?e.sibling:null);Na(ul,1&ul.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Wi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Na(ul,ul.current),r)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return $i(e,t,n)}(e,t,n);wi=0!=(131072&e.flags)}else wi=!1,ao&&0!=(1048576&t.flags)&&Za(t,Qa,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Hi(e,t),e=t.pendingProps;var a=Pa(t,La.current);Co(t,n),a=El(null,t,r,e,a,n);var l=Cl();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Da(r)?(l=!0,Ia(t)):l=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Do(t),a.updater=Vo,t.stateNode=a,a._reactInternals=t,Qo(t,r,e,n),t=Ri(null,t,r,!0,l,n)):(t.tag=0,ao&&l&&eo(t),ki(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Hi(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Os(e)?1:0;if(null!=e){if((e=e.$$typeof)===L)return 11;if(e===P)return 14}return 2}(r),e=go(r,e),a){case 0:t=_i(null,t,r,e,n);break e;case 1:t=Li(null,t,r,e,n);break e;case 11:t=Si(null,t,r,e,n);break e;case 14:t=xi(null,t,r,go(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,_i(e,t,r,a=t.elementType===r?a:go(r,a),n);case 1:return r=t.type,a=t.pendingProps,Li(e,t,r,a=t.elementType===r?a:go(r,a),n);case 3:e:{if(Ti(t),null===e)throw Error(o(387));r=t.pendingProps,a=(l=t.memoizedState).element,Oo(e,t),Ao(t,r,null,n);var i=t.memoizedState;if(r=i.element,l.isDehydrated){if(l={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=l,t.memoizedState=l,256&t.flags){t=Pi(e,t,r,n,a=ci(Error(o(423)),t));break e}if(r!==a){t=Pi(e,t,r,n,a=ci(Error(o(424)),t));break e}for(ro=sa(t.stateNode.containerInfo.firstChild),no=t,ao=!0,oo=null,n=Jo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ho(),r===a){t=$i(e,t,n);break e}ki(e,t,r,n)}t=t.child}return t;case 5:return ll(t),null===e&&so(t),r=t.type,a=t.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,na(r,a)?i=null:null!==l&&na(r,l)&&(t.flags|=32),Ni(e,t),ki(e,t,i,n),t.child;case 6:return null===e&&so(t),null;case 13:return Ai(e,t,n);case 4:return al(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Go(t,null,r,n):ki(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Si(e,t,r,a=t.elementType===r?a:go(r,a),n);case 7:return ki(e,t,t.pendingProps,n),t.child;case 8:case 12:return ki(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,l=t.memoizedProps,i=a.value,Na(yo,r._currentValue),r._currentValue=i,null!==l)if(ir(l.value,i)){if(l.children===a.children&&!Ra.current){t=$i(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){i=l.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===l.tag){(s=zo(-1,n&-n)).tag=2;var c=l.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?s.next=s:(s.next=d.next,d.next=s),c.pending=s}}l.lanes|=n,null!==(s=l.alternate)&&(s.lanes|=n),Eo(l.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===l.tag)i=l.type===t.type?null:l.child;else if(18===l.tag){if(null===(i=l.return))throw Error(o(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Eo(i,n,t),i=l.sibling}else i=l.child;if(null!==i)i.return=l;else for(i=l;null!==i;){if(i===t){i=null;break}if(null!==(l=i.sibling)){l.return=i.return,i=l;break}i=i.return}l=i}ki(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Co(t,n),r=r(a=No(a)),t.flags|=1,ki(e,t,r,n),t.child;case 14:return a=go(r=t.type,t.pendingProps),xi(e,t,r,a=go(r.type,a),n);case 15:return Ei(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:go(r,a),Hi(e,t),t.tag=1,Da(r)?(e=!0,Ia(t)):e=!1,Co(t,n),Ho(t,r,a),Qo(t,r,a,n),Ri(null,t,r,!0,e,n);case 19:return Wi(e,t,n);case 22:return Ci(e,t,n)}throw Error(o(156,t.tag))};var Ks="function"==typeof reportError?reportError:function(e){console.error(e)};function qs(e){this._internalRoot=e}function Xs(e){this._internalRoot=e}function Gs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Js(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zs(){}function ec(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o;if("function"==typeof a){var i=a;a=function(){var e=$s(l);i.call(e)}}Hs(t,l,e,a)}else l=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=$s(l);o.call(e)}}var l=Ws(t,r,e,0,null,!1,0,"",Zs);return e._reactRootContainer=l,e[ha]=l.current,Vr(8===e.nodeType?e.parentNode:e),ds(),l}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=$s(u);i.call(e)}}var u=Bs(e,0,!1,null,0,!1,0,"",Zs);return e._reactRootContainer=u,e[ha]=u.current,Vr(8===e.nodeType?e.parentNode:e),ds((function(){Hs(t,u,n,r)})),u}(n,t,e,a,r);return $s(l)}Xs.prototype.render=qs.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Hs(e,t,null,null)},Xs.prototype.unmount=qs.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ds((function(){Hs(null,e,null,null)})),t[ha]=null}},Xs.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ot.length&&0!==t&&t<Ot[n].priority;n++);Ot.splice(n,0,e),0===n&&Ft(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),as(t,Ge()),0==(6&Ru)&&(Wu=Ge()+500,Va()))}break;case 13:ds((function(){var t=To(e,1);if(null!==t){var n=ts();rs(t,e,1,n)}})),Ys(e,1)}},St=function(e){if(13===e.tag){var t=To(e,134217728);null!==t&&rs(t,e,134217728,ts()),Ys(e,134217728)}},xt=function(e){if(13===e.tag){var t=ns(e),n=To(e,t);null!==n&&rs(n,e,t,ts()),Ys(e,t)}},Et=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Se=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ka(r);if(!a)throw Error(o(90));Y(r),J(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Le=cs,Re=ds;var tc={usingClientEntryPoint:!1,Events:[ba,wa,ka,Ne,_e,cs]},nc={findFiberByHostInstance:ya,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(rc),ot=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Gs(t))throw Error(o(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Gs(e))throw Error(o(299));var n=!1,r="",a=Ks;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Bs(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,Vr(8===e.nodeType?e.parentNode:e),new qs(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return ds(e)},t.hydrate=function(e,t,n){if(!Js(t))throw Error(o(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Gs(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,a=!1,l="",i=Ks;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(l=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Ws(t,null,e,1,null!=n?n:null,a,0,l,i),e[ha]=t.current,Vr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Xs(t)},t.render=function(e,t,n){if(!Js(t))throw Error(o(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Js(e))throw Error(o(40));return!!e._reactRootContainer&&(ds((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=cs,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Js(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var w=b.prototype=new y;w.constructor=b,v(w,g.prototype),w.isPureReactComponent=!0;var k=Array.isArray,S=Object.prototype.hasOwnProperty,x={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var a,o={},l=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,a)&&!E.hasOwnProperty(a)&&(o[a]=t[a]);var u=arguments.length-2;if(1===u)o.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===o[a]&&(o[a]=u[a]);return{$$typeof:n,type:e,key:l,ref:i,props:o,_owner:x.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var _=/\/+/g;function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,a,o,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return l=l(u=e),e=""===o?"."+L(u,0):o,k(l)?(a="",null!=e&&(a=e.replace(_,"$&/")+"/"),R(l,t,a,"",(function(e){return e}))):null!=l&&(N(l)&&(l=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,a+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(_,"$&/")+"/")+e)),t.push(l)),1;if(u=0,o=""===o?".":o+":",k(e))for(var s=0;s<e.length;s++){var c=o+L(i=e[s],s);u+=R(i,t,a,c,l)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(i=e.next()).done;)u+=R(i=i.value,t,a,c=o+L(i,s++),l);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return R(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function P(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var D={current:null},O={transition:null},z={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:O,ReactCurrentOwner:x};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=a,t.Profiler=l,t.PureComponent=b,t.StrictMode=o,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=z,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=v({},e.props),o=e.key,l=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,i=x.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)S.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];a.children=u}return{$$typeof:n,type:e.type,key:o,ref:l,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return D.current.useCallback(e,t)},t.useContext=function(e){return D.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return D.current.useDeferredValue(e)},t.useEffect=function(e,t){return D.current.useEffect(e,t)},t.useId=function(){return D.current.useId()},t.useImperativeHandle=function(e,t,n){return D.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return D.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return D.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return D.current.useMemo(e,t)},t.useReducer=function(e,t,n){return D.current.useReducer(e,t,n)},t.useRef=function(e){return D.current.useRef(e)},t.useState=function(e){return D.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return D.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return D.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,l=a>>>1;r<l;){var i=2*(r+1)-1,u=e[i],s=i+1,c=e[s];if(0>o(u,n))s<a&&0>o(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[i]=n,r=i);else{if(!(s<a&&0>o(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var s=[],c=[],d=1,f=null,p=3,h=!1,v=!1,m=!1,g="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function k(e){if(m=!1,w(e),!v)if(null!==r(s))v=!0,O(S);else{var t=r(c);null!==t&&z(k,t.startTime-e)}}function S(e,n){v=!1,m&&(m=!1,y(N),N=-1),h=!0;var o=p;try{for(w(n),f=r(s);null!==f&&(!(f.expirationTime>n)||e&&!R());){var l=f.callback;if("function"==typeof l){f.callback=null,p=f.priorityLevel;var i=l(f.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?f.callback=i:f===r(s)&&a(s),w(n)}else a(s);f=r(s)}if(null!==f)var u=!0;else{var d=r(c);null!==d&&z(k,d.startTime-n),u=!1}return u}finally{f=null,p=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,E=!1,C=null,N=-1,_=5,L=-1;function R(){return!(t.unstable_now()-L<_)}function T(){if(null!==C){var e=t.unstable_now();L=e;var n=!0;try{n=C(!0,e)}finally{n?x():(E=!1,C=null)}}else E=!1}if("function"==typeof b)x=function(){b(T)};else if("undefined"!=typeof MessageChannel){var P=new MessageChannel,D=P.port2;P.port1.onmessage=T,x=function(){D.postMessage(null)}}else x=function(){g(T,0)};function O(e){C=e,E||(E=!0,x())}function z(e,n){N=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){v||h||(v=!0,O(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,o){var l=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?l+o:l,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>l?(e.sortIndex=o,n(c,e),null===r(s)&&e===r(c)&&(m?(y(N),N=-1):m=!0,z(k,o-l))):(e.sortIndex=i,n(s,e),v||h||(v=!0,O(S))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},l=[],i=0;i<e.length;i++){var u=e[i],s=r.base?u[0]+r.base:u[0],c=o[s]||0,d="".concat(s," ").concat(c);o[s]=c+1;var f=n(d),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var h=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:d,updater:h,references:1})}l.push(d)}return l}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var l=0;l<o.length;l++){var i=n(o[l]);t[i].references--}for(var u=r(e,a),s=0;s<o.length;s++){var c=n(o[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(294),t=n(745),r=n(697),a=n.n(r);function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function l(){l=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},u=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function d(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,n){return e[t]=n}}function f(e,t,n,r){var o=t&&t.prototype instanceof b?t:b,l=Object.create(o.prototype),i=new D(r||[]);return a(l,"_invoke",{value:L(e,n,i)}),l}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=f;var h="suspendedStart",v="suspendedYield",m="executing",g="completed",y={};function b(){}function w(){}function k(){}var S={};d(S,u,(function(){return this}));var x=Object.getPrototypeOf,E=x&&x(x(O([])));E&&E!==n&&r.call(E,u)&&(S=E);var C=k.prototype=b.prototype=Object.create(S);function N(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function _(e,t){function n(a,l,i,u){var s=p(e[a],e,l);if("throw"!==s.type){var c=s.arg,d=c.value;return d&&"object"==o(d)&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,i,u)}),(function(e){n("throw",e,i,u)})):t.resolve(d).then((function(e){c.value=e,i(c)}),(function(e){return n("throw",e,i,u)}))}u(s.arg)}var l;a(this,"_invoke",{value:function(e,r){function a(){return new t((function(t,a){n(e,r,t,a)}))}return l=l?l.then(a,a):a()}})}function L(t,n,r){var a=h;return function(o,l){if(a===m)throw new Error("Generator is already running");if(a===g){if("throw"===o)throw l;return{value:e,done:!0}}for(r.method=o,r.arg=l;;){var i=r.delegate;if(i){var u=R(i,r);if(u){if(u===y)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===h)throw a=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=m;var s=p(t,n,r);if("normal"===s.type){if(a=r.done?g:v,s.arg===y)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(a=g,r.method="throw",r.arg=s.arg)}}}function R(t,n){var r=n.method,a=t.iterator[r];if(a===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,R(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),y;var o=p(a,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,y;var l=o.arg;return l?l.done?(n[t.resultName]=l.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,y):l:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,y)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function D(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function O(t){if(t||""===t){var n=t[u];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,l=function n(){for(;++a<t.length;)if(r.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return l.next=l}}throw new TypeError(o(t)+" is not iterable")}return w.prototype=k,a(C,"constructor",{value:k,configurable:!0}),a(k,"constructor",{value:w,configurable:!0}),w.displayName=d(k,c,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===w||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,k):(e.__proto__=k,d(e,c,"GeneratorFunction")),e.prototype=Object.create(C),e},t.awrap=function(e){return{__await:e}},N(_.prototype),d(_.prototype,s,(function(){return this})),t.AsyncIterator=_,t.async=function(e,n,r,a,o){void 0===o&&(o=Promise);var l=new _(f(e,n,r,a),o);return t.isGeneratorFunction(n)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},N(C),d(C,c,"Generator"),d(C,u,(function(){return this})),d(C,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=O,D.prototype={constructor:D,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(P),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(r,a){return i.type="throw",i.arg=t,n.next=r,a&&(n.method="next",n.arg=e),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var l=this.tryEntries[o],i=l.completion;if("root"===l.tryLoc)return a("end");if(l.tryLoc<=this.prev){var u=r.call(l,"catchLoc"),s=r.call(l,"finallyLoc");if(u&&s){if(this.prev<l.catchLoc)return a(l.catchLoc,!0);if(this.prev<l.finallyLoc)return a(l.finallyLoc)}else if(u){if(this.prev<l.catchLoc)return a(l.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return a(l.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=t,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),y},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),y}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;P(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:O(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),y}},t}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,l,i=[],u=!0,s=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){s=!0,a=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(s)throw a}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t,n,r,a,o,l){try{var i=e[o](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var o=e.apply(t,n);function l(e){s(o,r,a,l,i,"next",e)}function i(e){s(o,r,a,l,i,"throw",e)}l(void 0)}))}}function d(e){return f.apply(this,arguments)}function f(){return(f=c(l().mark((function e(t){return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",fetch("http://localhost:8080/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((function(e){return e.json()})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function p(t){var n=t.setToken,r=i((0,e.useState)(""),2),a=r[0],o=r[1],u=i((0,e.useState)(""),2),s=u[0],f=u[1],p=function(){var e=c(l().mark((function e(t){var r;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.next=3,d({username:a,password:s});case 3:r=e.sent,n(r);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return e.createElement("div",{className:"container d-flex flex-column justify-content-center align-items-center"},e.createElement("form",{className:"d-flex flex-column justfy-content-center align-items-center",onSubmit:p},e.createElement("h1",null,"LogIn"),e.createElement("div",{className:"mb-3"},e.createElement("label",{htmlFor:"username",className:"visually-hidden"},"Username"),e.createElement("input",{type:"text",id:"username",className:"form-control-lg",value:a,placeholder:"Enter username...",onChange:function(e){return o(e.target.value)},required:!0}),e.createElement("div",{className:"form-text"},"Enter a valid username.")),e.createElement("div",{className:"mb-3"},e.createElement("label",{htmlFor:"password",className:"visually-hidden"},"Password"),e.createElement("input",{type:"password",id:"password",className:"form-control-lg",placeholder:"password",onChange:function(e){return f(e.target.value)},required:!0}),e.createElement("div",{className:"form-text"},"Enter a valid password.")),e.createElement("button",{type:"submit",className:"btn btn-primary"},"Submit")))}function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}p.propTypes={setToken:a().func.isRequired};var v=n(935);const m="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement;function g(e){const t=Object.prototype.toString.call(e);return"[object Window]"===t||"[object global]"===t}function y(e){return"nodeType"in e}function b(e){var t,n;return e?g(e)?e:y(e)&&null!=(t=null==(n=e.ownerDocument)?void 0:n.defaultView)?t:window:window}function w(e){const{Document:t}=b(e);return e instanceof t}function k(e){return!g(e)&&e instanceof b(e).HTMLElement}function S(e){return e?g(e)?e.document:y(e)?w(e)?e:k(e)?e.ownerDocument:document:document:document}const x=m?e.useLayoutEffect:e.useEffect;function E(t){const n=(0,e.useRef)(t);return x((()=>{n.current=t})),(0,e.useCallback)((function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return null==n.current?void 0:n.current(...t)}),[])}function C(t,n){void 0===n&&(n=[t]);const r=(0,e.useRef)(t);return x((()=>{r.current!==t&&(r.current=t)}),n),r}function N(t,n){const r=(0,e.useRef)();return(0,e.useMemo)((()=>{const e=t(r.current);return r.current=e,e}),[...n])}function _(t){const n=E(t),r=(0,e.useRef)(null),a=(0,e.useCallback)((e=>{e!==r.current&&(null==n||n(e,r.current)),r.current=e}),[]);return[r,a]}function L(t){const n=(0,e.useRef)();return(0,e.useEffect)((()=>{n.current=t}),[t]),n.current}let R={};function T(t,n){return(0,e.useMemo)((()=>{if(n)return n;const e=null==R[t]?0:R[t]+1;return R[t]=e,t+"-"+e}),[t,n])}function P(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return r.reduce(((t,n)=>{const r=Object.entries(n);for(const[n,a]of r){const r=t[n];null!=r&&(t[n]=r+e*a)}return t}),{...t})}}const D=P(1),O=P(-1);function z(e){if(!e)return!1;const{KeyboardEvent:t}=b(e.target);return t&&e instanceof t}function M(e){if(function(e){if(!e)return!1;const{TouchEvent:t}=b(e.target);return t&&e instanceof t}(e)){if(e.touches&&e.touches.length){const{clientX:t,clientY:n}=e.touches[0];return{x:t,y:n}}if(e.changedTouches&&e.changedTouches.length){const{clientX:t,clientY:n}=e.changedTouches[0];return{x:t,y:n}}}return function(e){return"clientX"in e&&"clientY"in e}(e)?{x:e.clientX,y:e.clientY}:null}const I=Object.freeze({Translate:{toString(e){if(!e)return;const{x:t,y:n}=e;return"translate3d("+(t?Math.round(t):0)+"px, "+(n?Math.round(n):0)+"px, 0)"}},Scale:{toString(e){if(!e)return;const{scaleX:t,scaleY:n}=e;return"scaleX("+t+") scaleY("+n+")"}},Transform:{toString(e){if(e)return[I.Translate.toString(e),I.Scale.toString(e)].join(" ")}},Transition:{toString(e){let{property:t,duration:n,easing:r}=e;return t+" "+n+"ms "+r}}}),F="a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]";function A(e){return e.matches(F)?e:e.querySelector(F)}const j={display:"none"};function U(t){let{id:n,value:r}=t;return e.createElement("div",{id:n,style:j},r)}const B={position:"fixed",width:1,height:1,margin:-1,border:0,padding:0,overflow:"hidden",clip:"rect(0 0 0 0)",clipPath:"inset(100%)",whiteSpace:"nowrap"};function V(t){let{id:n,announcement:r}=t;return e.createElement("div",{id:n,style:B,role:"status","aria-live":"assertive","aria-atomic":!0},r)}const W=(0,e.createContext)(null),H={draggable:"\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  "},$={onDragStart(e){let{active:t}=e;return"Picked up draggable item "+t.id+"."},onDragOver(e){let{active:t,over:n}=e;return n?"Draggable item "+t.id+" was moved over droppable area "+n.id+".":"Draggable item "+t.id+" is no longer over a droppable area."},onDragEnd(e){let{active:t,over:n}=e;return n?"Draggable item "+t.id+" was dropped over droppable area "+n.id:"Draggable item "+t.id+" was dropped."},onDragCancel(e){let{active:t}=e;return"Dragging was cancelled. Draggable item "+t.id+" was dropped."}};function Q(t){let{announcements:n=$,container:r,hiddenTextDescribedById:a,screenReaderInstructions:o=H}=t;const{announce:l,announcement:i}=function(){const[t,n]=(0,e.useState)("");return{announce:(0,e.useCallback)((e=>{null!=e&&n(e)}),[]),announcement:t}}(),u=T("DndLiveRegion"),[s,c]=(0,e.useState)(!1);if((0,e.useEffect)((()=>{c(!0)}),[]),function(t){const n=(0,e.useContext)(W);(0,e.useEffect)((()=>{if(!n)throw new Error("useDndMonitor must be used within a children of <DndContext>");return n(t)}),[t,n])}((0,e.useMemo)((()=>({onDragStart(e){let{active:t}=e;l(n.onDragStart({active:t}))},onDragMove(e){let{active:t,over:r}=e;n.onDragMove&&l(n.onDragMove({active:t,over:r}))},onDragOver(e){let{active:t,over:r}=e;l(n.onDragOver({active:t,over:r}))},onDragEnd(e){let{active:t,over:r}=e;l(n.onDragEnd({active:t,over:r}))},onDragCancel(e){let{active:t,over:r}=e;l(n.onDragCancel({active:t,over:r}))}})),[l,n])),!s)return null;const d=e.createElement(e.Fragment,null,e.createElement(U,{id:a,value:o.draggable}),e.createElement(V,{id:u,announcement:i}));return r?(0,v.createPortal)(d,r):d}var Y;function K(){}!function(e){e.DragStart="dragStart",e.DragMove="dragMove",e.DragEnd="dragEnd",e.DragCancel="dragCancel",e.DragOver="dragOver",e.RegisterDroppable="registerDroppable",e.SetDroppableDisabled="setDroppableDisabled",e.UnregisterDroppable="unregisterDroppable"}(Y||(Y={}));const q=Object.freeze({x:0,y:0});function X(e,t){const n=M(e);return n?(n.x-t.left)/t.width*100+"% "+(n.y-t.top)/t.height*100+"%":"0 0"}function G(e,t){let{data:{value:n}}=e,{data:{value:r}}=t;return n-r}function J(e,t){let{data:{value:n}}=e,{data:{value:r}}=t;return r-n}function Z(e,t,n){return void 0===t&&(t=e.left),void 0===n&&(n=e.top),{x:t+.5*e.width,y:n+.5*e.height}}const ee=e=>{let{collisionRect:t,droppableRects:n,droppableContainers:r}=e;const a=Z(t,t.left,t.top),o=[];for(const e of r){const{id:t}=e,r=n.get(t);if(r){const n=(l=Z(r),i=a,Math.sqrt(Math.pow(l.x-i.x,2)+Math.pow(l.y-i.y,2)));o.push({id:t,data:{droppableContainer:e,value:n}})}}var l,i;return o.sort(G)};function te(e,t){const n=Math.max(t.top,e.top),r=Math.max(t.left,e.left),a=Math.min(t.left+t.width,e.left+e.width),o=Math.min(t.top+t.height,e.top+e.height),l=a-r,i=o-n;if(r<a&&n<o){const n=t.width*t.height,r=e.width*e.height,a=l*i;return Number((a/(n+r-a)).toFixed(4))}return 0}const ne=e=>{let{collisionRect:t,droppableRects:n,droppableContainers:r}=e;const a=[];for(const e of r){const{id:r}=e,o=n.get(r);if(o){const n=te(o,t);n>0&&a.push({id:r,data:{droppableContainer:e,value:n}})}}return a.sort(J)};function re(e,t){return e&&t?{x:e.left-t.left,y:e.top-t.top}:q}function ae(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return r.reduce(((t,n)=>({...t,top:t.top+e*n.y,bottom:t.bottom+e*n.y,left:t.left+e*n.x,right:t.right+e*n.x})),{...t})}}const oe=ae(1);function le(e){if(e.startsWith("matrix3d(")){const t=e.slice(9,-1).split(/, /);return{x:+t[12],y:+t[13],scaleX:+t[0],scaleY:+t[5]}}if(e.startsWith("matrix(")){const t=e.slice(7,-1).split(/, /);return{x:+t[4],y:+t[5],scaleX:+t[0],scaleY:+t[3]}}return null}const ie={ignoreTransform:!1};function ue(e,t){void 0===t&&(t=ie);let n=e.getBoundingClientRect();if(t.ignoreTransform){const{transform:t,transformOrigin:r}=b(e).getComputedStyle(e);t&&(n=function(e,t,n){const r=le(t);if(!r)return e;const{scaleX:a,scaleY:o,x:l,y:i}=r,u=e.left-l-(1-a)*parseFloat(n),s=e.top-i-(1-o)*parseFloat(n.slice(n.indexOf(" ")+1)),c=a?e.width/a:e.width,d=o?e.height/o:e.height;return{width:c,height:d,top:s,right:u+c,bottom:s+d,left:u}}(n,t,r))}const{top:r,left:a,width:o,height:l,bottom:i,right:u}=n;return{top:r,left:a,width:o,height:l,bottom:i,right:u}}function se(e){return ue(e,{ignoreTransform:!0})}function ce(e,t){const n=[];return e?function r(a){if(null!=t&&n.length>=t)return n;if(!a)return n;if(w(a)&&null!=a.scrollingElement&&!n.includes(a.scrollingElement))return n.push(a.scrollingElement),n;if(!k(a)||function(e){return e instanceof b(e).SVGElement}(a))return n;if(n.includes(a))return n;const o=b(e).getComputedStyle(a);return a!==e&&function(e,t){void 0===t&&(t=b(e).getComputedStyle(e));const n=/(auto|scroll|overlay)/;return["overflow","overflowX","overflowY"].some((e=>{const r=t[e];return"string"==typeof r&&n.test(r)}))}(a,o)&&n.push(a),function(e,t){return void 0===t&&(t=b(e).getComputedStyle(e)),"fixed"===t.position}(a,o)?n:r(a.parentNode)}(e):n}function de(e){const[t]=ce(e,1);return null!=t?t:null}function fe(e){return m&&e?g(e)?e:y(e)?w(e)||e===S(e).scrollingElement?window:k(e)?e:null:null:null}function pe(e){return g(e)?e.scrollX:e.scrollLeft}function he(e){return g(e)?e.scrollY:e.scrollTop}function ve(e){return{x:pe(e),y:he(e)}}var me;function ge(e){return!(!m||!e)&&e===document.scrollingElement}function ye(e){const t={x:0,y:0},n=ge(e)?{height:window.innerHeight,width:window.innerWidth}:{height:e.clientHeight,width:e.clientWidth},r={x:e.scrollWidth-n.width,y:e.scrollHeight-n.height};return{isTop:e.scrollTop<=t.y,isLeft:e.scrollLeft<=t.x,isBottom:e.scrollTop>=r.y,isRight:e.scrollLeft>=r.x,maxScroll:r,minScroll:t}}!function(e){e[e.Forward=1]="Forward",e[e.Backward=-1]="Backward"}(me||(me={}));const be={x:.2,y:.2};function we(e,t,n,r,a){let{top:o,left:l,right:i,bottom:u}=n;void 0===r&&(r=10),void 0===a&&(a=be);const{isTop:s,isBottom:c,isLeft:d,isRight:f}=ye(e),p={x:0,y:0},h={x:0,y:0},v=t.height*a.y,m=t.width*a.x;return!s&&o<=t.top+v?(p.y=me.Backward,h.y=r*Math.abs((t.top+v-o)/v)):!c&&u>=t.bottom-v&&(p.y=me.Forward,h.y=r*Math.abs((t.bottom-v-u)/v)),!f&&i>=t.right-m?(p.x=me.Forward,h.x=r*Math.abs((t.right-m-i)/m)):!d&&l<=t.left+m&&(p.x=me.Backward,h.x=r*Math.abs((t.left+m-l)/m)),{direction:p,speed:h}}function ke(e){if(e===document.scrollingElement){const{innerWidth:e,innerHeight:t}=window;return{top:0,left:0,right:e,bottom:t,width:e,height:t}}const{top:t,left:n,right:r,bottom:a}=e.getBoundingClientRect();return{top:t,left:n,right:r,bottom:a,width:e.clientWidth,height:e.clientHeight}}function Se(e){return e.reduce(((e,t)=>D(e,ve(t))),q)}function xe(e,t){if(void 0===t&&(t=ue),!e)return;const{top:n,left:r,bottom:a,right:o}=t(e);de(e)&&(a<=0||o<=0||n>=window.innerHeight||r>=window.innerWidth)&&e.scrollIntoView({block:"center",inline:"center"})}const Ee=[["x",["left","right"],function(e){return e.reduce(((e,t)=>e+pe(t)),0)}],["y",["top","bottom"],function(e){return e.reduce(((e,t)=>e+he(t)),0)}]];class Ce{constructor(e,t){this.rect=void 0,this.width=void 0,this.height=void 0,this.top=void 0,this.bottom=void 0,this.right=void 0,this.left=void 0;const n=ce(t),r=Se(n);this.rect={...e},this.width=e.width,this.height=e.height;for(const[e,t,a]of Ee)for(const o of t)Object.defineProperty(this,o,{get:()=>{const t=a(n),l=r[e]-t;return this.rect[o]+l},enumerable:!0});Object.defineProperty(this,"rect",{enumerable:!1})}}class Ne{constructor(e){this.target=void 0,this.listeners=[],this.removeAll=()=>{this.listeners.forEach((e=>{var t;return null==(t=this.target)?void 0:t.removeEventListener(...e)}))},this.target=e}add(e,t,n){var r;null==(r=this.target)||r.addEventListener(e,t,n),this.listeners.push([e,t,n])}}function _e(e,t){const n=Math.abs(e.x),r=Math.abs(e.y);return"number"==typeof t?Math.sqrt(n**2+r**2)>t:"x"in t&&"y"in t?n>t.x&&r>t.y:"x"in t?n>t.x:"y"in t&&r>t.y}var Le,Re,Te;function Pe(e){e.preventDefault()}function De(e){e.stopPropagation()}!function(e){e.Click="click",e.DragStart="dragstart",e.Keydown="keydown",e.ContextMenu="contextmenu",e.Resize="resize",e.SelectionChange="selectionchange",e.VisibilityChange="visibilitychange"}(Le||(Le={})),(Te=Re||(Re={})).Space="Space",Te.Down="ArrowDown",Te.Right="ArrowRight",Te.Left="ArrowLeft",Te.Up="ArrowUp",Te.Esc="Escape",Te.Enter="Enter";const Oe={start:[Re.Space,Re.Enter],cancel:[Re.Esc],end:[Re.Space,Re.Enter]},ze=(e,t)=>{let{currentCoordinates:n}=t;switch(e.code){case Re.Right:return{...n,x:n.x+25};case Re.Left:return{...n,x:n.x-25};case Re.Down:return{...n,y:n.y+25};case Re.Up:return{...n,y:n.y-25}}};class Me{constructor(e){this.props=void 0,this.autoScrollEnabled=!1,this.referenceCoordinates=void 0,this.listeners=void 0,this.windowListeners=void 0,this.props=e;const{event:{target:t}}=e;this.props=e,this.listeners=new Ne(S(t)),this.windowListeners=new Ne(b(t)),this.handleKeyDown=this.handleKeyDown.bind(this),this.handleCancel=this.handleCancel.bind(this),this.attach()}attach(){this.handleStart(),this.windowListeners.add(Le.Resize,this.handleCancel),this.windowListeners.add(Le.VisibilityChange,this.handleCancel),setTimeout((()=>this.listeners.add(Le.Keydown,this.handleKeyDown)))}handleStart(){const{activeNode:e,onStart:t}=this.props,n=e.node.current;n&&xe(n),t(q)}handleKeyDown(e){if(z(e)){const{active:t,context:n,options:r}=this.props,{keyboardCodes:a=Oe,coordinateGetter:o=ze,scrollBehavior:l="smooth"}=r,{code:i}=e;if(a.end.includes(i))return void this.handleEnd(e);if(a.cancel.includes(i))return void this.handleCancel(e);const{collisionRect:u}=n.current,s=u?{x:u.left,y:u.top}:q;this.referenceCoordinates||(this.referenceCoordinates=s);const c=o(e,{active:t,context:n.current,currentCoordinates:s});if(c){const t=O(c,s),r={x:0,y:0},{scrollableAncestors:a}=n.current;for(const n of a){const a=e.code,{isTop:o,isRight:i,isLeft:u,isBottom:s,maxScroll:d,minScroll:f}=ye(n),p=ke(n),h={x:Math.min(a===Re.Right?p.right-p.width/2:p.right,Math.max(a===Re.Right?p.left:p.left+p.width/2,c.x)),y:Math.min(a===Re.Down?p.bottom-p.height/2:p.bottom,Math.max(a===Re.Down?p.top:p.top+p.height/2,c.y))},v=a===Re.Right&&!i||a===Re.Left&&!u,m=a===Re.Down&&!s||a===Re.Up&&!o;if(v&&h.x!==c.x){const e=n.scrollLeft+t.x,o=a===Re.Right&&e<=d.x||a===Re.Left&&e>=f.x;if(o&&!t.y)return void n.scrollTo({left:e,behavior:l});r.x=o?n.scrollLeft-e:a===Re.Right?n.scrollLeft-d.x:n.scrollLeft-f.x,r.x&&n.scrollBy({left:-r.x,behavior:l});break}if(m&&h.y!==c.y){const e=n.scrollTop+t.y,o=a===Re.Down&&e<=d.y||a===Re.Up&&e>=f.y;if(o&&!t.x)return void n.scrollTo({top:e,behavior:l});r.y=o?n.scrollTop-e:a===Re.Down?n.scrollTop-d.y:n.scrollTop-f.y,r.y&&n.scrollBy({top:-r.y,behavior:l});break}}this.handleMove(e,D(O(c,this.referenceCoordinates),r))}}}handleMove(e,t){const{onMove:n}=this.props;e.preventDefault(),n(t)}handleEnd(e){const{onEnd:t}=this.props;e.preventDefault(),this.detach(),t()}handleCancel(e){const{onCancel:t}=this.props;e.preventDefault(),this.detach(),t()}detach(){this.listeners.removeAll(),this.windowListeners.removeAll()}}function Ie(e){return Boolean(e&&"distance"in e)}function Fe(e){return Boolean(e&&"delay"in e)}Me.activators=[{eventName:"onKeyDown",handler:(e,t,n)=>{let{keyboardCodes:r=Oe,onActivation:a}=t,{active:o}=n;const{code:l}=e.nativeEvent;if(r.start.includes(l)){const t=o.activatorNode.current;return!(t&&e.target!==t||(e.preventDefault(),null==a||a({event:e.nativeEvent}),0))}return!1}}];class Ae{constructor(e,t,n){var r;void 0===n&&(n=function(e){const{EventTarget:t}=b(e);return e instanceof t?e:S(e)}(e.event.target)),this.props=void 0,this.events=void 0,this.autoScrollEnabled=!0,this.document=void 0,this.activated=!1,this.initialCoordinates=void 0,this.timeoutId=null,this.listeners=void 0,this.documentListeners=void 0,this.windowListeners=void 0,this.props=e,this.events=t;const{event:a}=e,{target:o}=a;this.props=e,this.events=t,this.document=S(o),this.documentListeners=new Ne(this.document),this.listeners=new Ne(n),this.windowListeners=new Ne(b(o)),this.initialCoordinates=null!=(r=M(a))?r:q,this.handleStart=this.handleStart.bind(this),this.handleMove=this.handleMove.bind(this),this.handleEnd=this.handleEnd.bind(this),this.handleCancel=this.handleCancel.bind(this),this.handleKeydown=this.handleKeydown.bind(this),this.removeTextSelection=this.removeTextSelection.bind(this),this.attach()}attach(){const{events:e,props:{options:{activationConstraint:t}}}=this;if(this.listeners.add(e.move.name,this.handleMove,{passive:!1}),this.listeners.add(e.end.name,this.handleEnd),this.windowListeners.add(Le.Resize,this.handleCancel),this.windowListeners.add(Le.DragStart,Pe),this.windowListeners.add(Le.VisibilityChange,this.handleCancel),this.windowListeners.add(Le.ContextMenu,Pe),this.documentListeners.add(Le.Keydown,this.handleKeydown),t){if(Ie(t))return;if(Fe(t))return void(this.timeoutId=setTimeout(this.handleStart,t.delay))}this.handleStart()}detach(){this.listeners.removeAll(),this.windowListeners.removeAll(),setTimeout(this.documentListeners.removeAll,50),null!==this.timeoutId&&(clearTimeout(this.timeoutId),this.timeoutId=null)}handleStart(){const{initialCoordinates:e}=this,{onStart:t}=this.props;e&&(this.activated=!0,this.documentListeners.add(Le.Click,De,{capture:!0}),this.removeTextSelection(),this.documentListeners.add(Le.SelectionChange,this.removeTextSelection),t(e))}handleMove(e){var t;const{activated:n,initialCoordinates:r,props:a}=this,{onMove:o,options:{activationConstraint:l}}=a;if(!r)return;const i=null!=(t=M(e))?t:q,u=O(r,i);if(!n&&l){if(Fe(l))return _e(u,l.tolerance)?this.handleCancel():void 0;if(Ie(l))return null!=l.tolerance&&_e(u,l.tolerance)?this.handleCancel():_e(u,l.distance)?this.handleStart():void 0}e.cancelable&&e.preventDefault(),o(i)}handleEnd(){const{onEnd:e}=this.props;this.detach(),e()}handleCancel(){const{onCancel:e}=this.props;this.detach(),e()}handleKeydown(e){e.code===Re.Esc&&this.handleCancel()}removeTextSelection(){var e;null==(e=this.document.getSelection())||e.removeAllRanges()}}const je={move:{name:"pointermove"},end:{name:"pointerup"}};class Ue extends Ae{constructor(e){const{event:t}=e,n=S(t.target);super(e,je,n)}}Ue.activators=[{eventName:"onPointerDown",handler:(e,t)=>{let{nativeEvent:n}=e,{onActivation:r}=t;return!(!n.isPrimary||0!==n.button||(null==r||r({event:n}),0))}}];const Be={move:{name:"mousemove"},end:{name:"mouseup"}};var Ve;!function(e){e[e.RightClick=2]="RightClick"}(Ve||(Ve={})),class extends Ae{constructor(e){super(e,Be,S(e.event.target))}}.activators=[{eventName:"onMouseDown",handler:(e,t)=>{let{nativeEvent:n}=e,{onActivation:r}=t;return n.button!==Ve.RightClick&&(null==r||r({event:n}),!0)}}];const We={move:{name:"touchmove"},end:{name:"touchend"}};var He,$e;(class extends Ae{constructor(e){super(e,We)}static setup(){return window.addEventListener(We.move.name,e,{capture:!1,passive:!1}),function(){window.removeEventListener(We.move.name,e)};function e(){}}}).activators=[{eventName:"onTouchStart",handler:(e,t)=>{let{nativeEvent:n}=e,{onActivation:r}=t;const{touches:a}=n;return!(a.length>1||(null==r||r({event:n}),0))}}],function(e){e[e.Pointer=0]="Pointer",e[e.DraggableRect=1]="DraggableRect"}(He||(He={})),function(e){e[e.TreeOrder=0]="TreeOrder",e[e.ReversedTreeOrder=1]="ReversedTreeOrder"}($e||($e={}));const Qe={x:{[me.Backward]:!1,[me.Forward]:!1},y:{[me.Backward]:!1,[me.Forward]:!1}};var Ye,Ke;!function(e){e[e.Always=0]="Always",e[e.BeforeDragging=1]="BeforeDragging",e[e.WhileDragging=2]="WhileDragging"}(Ye||(Ye={})),function(e){e.Optimized="optimized"}(Ke||(Ke={}));const qe=new Map;function Xe(e,t){return N((n=>e?n||("function"==typeof t?t(e):e):null),[t,e])}function Ge(t){let{callback:n,disabled:r}=t;const a=E(n),o=(0,e.useMemo)((()=>{if(r||"undefined"==typeof window||void 0===window.ResizeObserver)return;const{ResizeObserver:e}=window;return new e(a)}),[r]);return(0,e.useEffect)((()=>()=>null==o?void 0:o.disconnect()),[o]),o}function Je(e){return new Ce(ue(e),e)}function Ze(t,n,r){void 0===n&&(n=Je);const[a,o]=(0,e.useReducer)((function(e){if(!t)return null;var a;if(!1===t.isConnected)return null!=(a=null!=e?e:r)?a:null;const o=n(t);return JSON.stringify(e)===JSON.stringify(o)?e:o}),null),l=function(t){let{callback:n,disabled:r}=t;const a=E(n),o=(0,e.useMemo)((()=>{if(r||"undefined"==typeof window||void 0===window.MutationObserver)return;const{MutationObserver:e}=window;return new e(a)}),[a,r]);return(0,e.useEffect)((()=>()=>null==o?void 0:o.disconnect()),[o]),o}({callback(e){if(t)for(const n of e){const{type:e,target:r}=n;if("childList"===e&&r instanceof HTMLElement&&r.contains(t)){o();break}}}}),i=Ge({callback:o});return x((()=>{o(),t?(null==i||i.observe(t),null==l||l.observe(document.body,{childList:!0,subtree:!0})):(null==i||i.disconnect(),null==l||l.disconnect())}),[t]),a}const et=[];function tt(t,n){void 0===n&&(n=[]);const r=(0,e.useRef)(null);return(0,e.useEffect)((()=>{r.current=null}),n),(0,e.useEffect)((()=>{const e=t!==q;e&&!r.current&&(r.current=t),!e&&r.current&&(r.current=null)}),[t]),r.current?O(t,r.current):q}function nt(t){return(0,e.useMemo)((()=>t?function(e){const t=e.innerWidth,n=e.innerHeight;return{top:0,left:0,right:t,bottom:n,width:t,height:n}}(t):null),[t])}const rt=[];function at(e){if(!e)return null;if(e.children.length>1)return e;const t=e.children[0];return k(t)?t:e}const ot=[{sensor:Ue,options:{}},{sensor:Me,options:{}}],lt={current:{}},it={draggable:{measure:se},droppable:{measure:se,strategy:Ye.WhileDragging,frequency:Ke.Optimized},dragOverlay:{measure:ue}};class ut extends Map{get(e){var t;return null!=e&&null!=(t=super.get(e))?t:void 0}toArray(){return Array.from(this.values())}getEnabled(){return this.toArray().filter((e=>{let{disabled:t}=e;return!t}))}getNodeFor(e){var t,n;return null!=(t=null==(n=this.get(e))?void 0:n.node.current)?t:void 0}}const st={activatorEvent:null,active:null,activeNode:null,activeNodeRect:null,collisions:null,containerNodeRect:null,draggableNodes:new Map,droppableRects:new Map,droppableContainers:new ut,over:null,dragOverlay:{nodeRef:{current:null},rect:null,setRef:K},scrollableAncestors:[],scrollableAncestorRects:[],measuringConfiguration:it,measureDroppableContainers:K,windowRect:null,measuringScheduled:!1},ct={activatorEvent:null,activators:[],active:null,activeNodeRect:null,ariaDescribedById:{draggable:""},dispatch:K,draggableNodes:new Map,over:null,measureDroppableContainers:K},dt=(0,e.createContext)(ct),ft=(0,e.createContext)(st);function pt(){return{draggable:{active:null,initialCoordinates:{x:0,y:0},nodes:new Map,translate:{x:0,y:0}},droppable:{containers:new ut}}}function ht(e,t){switch(t.type){case Y.DragStart:return{...e,draggable:{...e.draggable,initialCoordinates:t.initialCoordinates,active:t.active}};case Y.DragMove:return e.draggable.active?{...e,draggable:{...e.draggable,translate:{x:t.coordinates.x-e.draggable.initialCoordinates.x,y:t.coordinates.y-e.draggable.initialCoordinates.y}}}:e;case Y.DragEnd:case Y.DragCancel:return{...e,draggable:{...e.draggable,active:null,initialCoordinates:{x:0,y:0},translate:{x:0,y:0}}};case Y.RegisterDroppable:{const{element:n}=t,{id:r}=n,a=new ut(e.droppable.containers);return a.set(r,n),{...e,droppable:{...e.droppable,containers:a}}}case Y.SetDroppableDisabled:{const{id:n,key:r,disabled:a}=t,o=e.droppable.containers.get(n);if(!o||r!==o.key)return e;const l=new ut(e.droppable.containers);return l.set(n,{...o,disabled:a}),{...e,droppable:{...e.droppable,containers:l}}}case Y.UnregisterDroppable:{const{id:n,key:r}=t,a=e.droppable.containers.get(n);if(!a||r!==a.key)return e;const o=new ut(e.droppable.containers);return o.delete(n),{...e,droppable:{...e.droppable,containers:o}}}default:return e}}function vt(t){let{disabled:n}=t;const{active:r,activatorEvent:a,draggableNodes:o}=(0,e.useContext)(dt),l=L(a),i=L(null==r?void 0:r.id);return(0,e.useEffect)((()=>{if(!n&&!a&&l&&null!=i){if(!z(l))return;if(document.activeElement===l.target)return;const e=o.get(i);if(!e)return;const{activatorNode:t,node:n}=e;if(!t.current&&!n.current)return;requestAnimationFrame((()=>{for(const e of[t.current,n.current]){if(!e)continue;const t=A(e);if(t){t.focus();break}}}))}}),[a,n,o,i,l]),null}function mt(e,t){let{transform:n,...r}=t;return null!=e&&e.length?e.reduce(((e,t)=>t({transform:e,...r})),n):n}const gt=(0,e.createContext)({...q,scaleX:1,scaleY:1});var yt;!function(e){e[e.Uninitialized=0]="Uninitialized",e[e.Initializing=1]="Initializing",e[e.Initialized=2]="Initialized"}(yt||(yt={}));const bt=(0,e.memo)((function(t){var n,r,a,o;let{id:l,accessibility:i,autoScroll:u=!0,children:s,sensors:c=ot,collisionDetection:d=ne,measuring:f,modifiers:p,...h}=t;const g=(0,e.useReducer)(ht,void 0,pt),[y,w]=g,[S,E]=function(){const[t]=(0,e.useState)((()=>new Set)),n=(0,e.useCallback)((e=>(t.add(e),()=>t.delete(e))),[t]);return[(0,e.useCallback)((e=>{let{type:n,event:r}=e;t.forEach((e=>{var t;return null==(t=e[n])?void 0:t.call(e,r)}))}),[t]),n]}(),[R,P]=(0,e.useState)(yt.Uninitialized),O=R===yt.Initialized,{draggable:{active:z,nodes:I,translate:F},droppable:{containers:A}}=y,j=z?I.get(z):null,U=(0,e.useRef)({initial:null,translated:null}),B=(0,e.useMemo)((()=>{var e;return null!=z?{id:z,data:null!=(e=null==j?void 0:j.data)?e:lt,rect:U}:null}),[z,j]),V=(0,e.useRef)(null),[H,$]=(0,e.useState)(null),[K,X]=(0,e.useState)(null),G=C(h,Object.values(h)),J=T("DndDescribedBy",l),Z=(0,e.useMemo)((()=>A.getEnabled()),[A]),ee=(te=f,(0,e.useMemo)((()=>({draggable:{...it.draggable,...null==te?void 0:te.draggable},droppable:{...it.droppable,...null==te?void 0:te.droppable},dragOverlay:{...it.dragOverlay,...null==te?void 0:te.dragOverlay}})),[null==te?void 0:te.draggable,null==te?void 0:te.droppable,null==te?void 0:te.dragOverlay]));var te;const{droppableRects:ae,measureDroppableContainers:le,measuringScheduled:ie}=function(t,n){let{dragging:r,dependencies:a,config:o}=n;const[l,i]=(0,e.useState)(null),{frequency:u,measure:s,strategy:c}=o,d=(0,e.useRef)(t),f=function(){switch(c){case Ye.Always:return!1;case Ye.BeforeDragging:return r;default:return!r}}(),p=C(f),h=(0,e.useCallback)((function(e){void 0===e&&(e=[]),p.current||i((t=>null===t?e:t.concat(e.filter((e=>!t.includes(e))))))}),[p]),v=(0,e.useRef)(null),m=N((e=>{if(f&&!r)return qe;if(!e||e===qe||d.current!==t||null!=l){const e=new Map;for(let n of t){if(!n)continue;if(l&&l.length>0&&!l.includes(n.id)&&n.rect.current){e.set(n.id,n.rect.current);continue}const t=n.node.current,r=t?new Ce(s(t),t):null;n.rect.current=r,r&&e.set(n.id,r)}return e}return e}),[t,l,r,f,s]);return(0,e.useEffect)((()=>{d.current=t}),[t]),(0,e.useEffect)((()=>{f||h()}),[r,f]),(0,e.useEffect)((()=>{l&&l.length>0&&i(null)}),[JSON.stringify(l)]),(0,e.useEffect)((()=>{f||"number"!=typeof u||null!==v.current||(v.current=setTimeout((()=>{h(),v.current=null}),u))}),[u,f,h,...a]),{droppableRects:m,measureDroppableContainers:h,measuringScheduled:null!=l}}(Z,{dragging:O,dependencies:[F.x,F.y],config:ee.droppable}),se=function(e,t){const n=null!==t?e.get(t):void 0,r=n?n.node.current:null;return N((e=>{var n;return null===t?null:null!=(n=null!=r?r:e)?n:null}),[r,t])}(I,z),pe=(0,e.useMemo)((()=>K?M(K):null),[K]),he=function(){const e=!1===(null==H?void 0:H.autoScrollEnabled),t="object"==typeof u?!1===u.enabled:!1===u,n=O&&!e&&!t;return"object"==typeof u?{...u,enabled:n}:{enabled:n}}(),ye=function(e,t){return Xe(e,t)}(se,ee.draggable.measure);!function(t){let{activeNode:n,measure:r,initialRect:a,config:o=!0}=t;const l=(0,e.useRef)(!1),{x:i,y:u}="boolean"==typeof o?{x:o,y:o}:o;x((()=>{if(!i&&!u||!n)return void(l.current=!1);if(l.current||!a)return;const e=null==n?void 0:n.node.current;if(!e||!1===e.isConnected)return;const t=re(r(e),a);if(i||(t.x=0),u||(t.y=0),l.current=!0,Math.abs(t.x)>0||Math.abs(t.y)>0){const n=de(e);n&&n.scrollBy({top:t.y,left:t.x})}}),[n,i,u,a,r])}({activeNode:z?I.get(z):null,config:he.layoutShiftCompensation,initialRect:ye,measure:ee.draggable.measure});const be=Ze(se,ee.draggable.measure,ye),ke=Ze(se?se.parentElement:null),xe=(0,e.useRef)({activatorEvent:null,active:null,activeNode:se,collisionRect:null,collisions:null,droppableRects:ae,draggableNodes:I,draggingNode:null,draggingNodeRect:null,droppableContainers:A,over:null,scrollableAncestors:[],scrollAdjustedTranslate:null}),Ee=A.getNodeFor(null==(n=xe.current.over)?void 0:n.id),Ne=function(t){let{measure:n}=t;const[r,a]=(0,e.useState)(null),o=Ge({callback:(0,e.useCallback)((e=>{for(const{target:t}of e)if(k(t)){a((e=>{const r=n(t);return e?{...e,width:r.width,height:r.height}:r}));break}}),[n])}),l=(0,e.useCallback)((e=>{const t=at(e);null==o||o.disconnect(),t&&(null==o||o.observe(t)),a(t?n(t):null)}),[n,o]),[i,u]=_(l);return(0,e.useMemo)((()=>({nodeRef:i,rect:r,setRef:u})),[r,i,u])}({measure:ee.dragOverlay.measure}),_e=null!=(r=Ne.nodeRef.current)?r:se,Le=O?null!=(a=Ne.rect)?a:be:null,Re=Boolean(Ne.nodeRef.current&&Ne.rect),Te=re(Pe=Re?null:be,Xe(Pe));var Pe;const De=nt(_e?b(_e):null),Oe=function(t){const n=(0,e.useRef)(t),r=N((e=>t?e&&e!==et&&t&&n.current&&t.parentNode===n.current.parentNode?e:ce(t):et),[t]);return(0,e.useEffect)((()=>{n.current=t}),[t]),r}(O?null!=Ee?Ee:se:null),ze=function(t,n){void 0===n&&(n=ue);const[r]=t,a=nt(r?b(r):null),[o,l]=(0,e.useReducer)((function(){return t.length?t.map((e=>ge(e)?a:new Ce(n(e),e))):rt}),rt),i=Ge({callback:l});return t.length>0&&o===rt&&l(),x((()=>{t.length?t.forEach((e=>null==i?void 0:i.observe(e))):(null==i||i.disconnect(),l())}),[t]),o}(Oe),Me=mt(p,{transform:{x:F.x-Te.x,y:F.y-Te.y,scaleX:1,scaleY:1},activatorEvent:K,active:B,activeNodeRect:be,containerNodeRect:ke,draggingNodeRect:Le,over:xe.current.over,overlayNodeRect:Ne.rect,scrollableAncestors:Oe,scrollableAncestorRects:ze,windowRect:De}),Ie=pe?D(pe,F):null,Fe=function(t){const[n,r]=(0,e.useState)(null),a=(0,e.useRef)(t),o=(0,e.useCallback)((e=>{const t=fe(e.target);t&&r((e=>e?(e.set(t,ve(t)),new Map(e)):null))}),[]);return(0,e.useEffect)((()=>{const e=a.current;if(t!==e){n(e);const l=t.map((e=>{const t=fe(e);return t?(t.addEventListener("scroll",o,{passive:!0}),[t,ve(t)]):null})).filter((e=>null!=e));r(l.length?new Map(l):null),a.current=t}return()=>{n(t),n(e)};function n(e){e.forEach((e=>{const t=fe(e);null==t||t.removeEventListener("scroll",o)}))}}),[o,t]),(0,e.useMemo)((()=>t.length?n?Array.from(n.values()).reduce(((e,t)=>D(e,t)),q):Se(t):q),[t,n])}(Oe),Ae=tt(Fe),je=tt(Fe,[be]),Ue=D(Me,Ae),Be=Le?oe(Le,Me):null,Ve=B&&Be?d({active:B,collisionRect:Be,droppableRects:ae,droppableContainers:Z,pointerCoordinates:Ie}):null,We=function(e,t){if(!e||0===e.length)return null;const[n]=e;return n.id}(Ve),[Ke,Je]=(0,e.useState)(null),ut=function(e,t,n){return{...e,scaleX:t&&n?t.width/n.width:1,scaleY:t&&n?t.height/n.height:1}}(Re?Me:D(Me,je),null!=(o=null==Ke?void 0:Ke.rect)?o:null,be),st=(0,e.useCallback)(((e,t)=>{let{sensor:n,options:r}=t;if(null==V.current)return;const a=I.get(V.current);if(!a)return;const o=e.nativeEvent,l=new n({active:V.current,activeNode:a,event:o,options:r,context:xe,onStart(e){const t=V.current;if(null==t)return;const n=I.get(t);if(!n)return;const{onDragStart:r}=G.current,a={active:{id:t,data:n.data,rect:U}};(0,v.unstable_batchedUpdates)((()=>{null==r||r(a),P(yt.Initializing),w({type:Y.DragStart,initialCoordinates:e,active:t}),S({type:"onDragStart",event:a})}))},onMove(e){w({type:Y.DragMove,coordinates:e})},onEnd:i(Y.DragEnd),onCancel:i(Y.DragCancel)});function i(e){return async function(){const{active:t,collisions:n,over:r,scrollAdjustedTranslate:a}=xe.current;let l=null;if(t&&a){const{cancelDrop:i}=G.current;l={activatorEvent:o,active:t,collisions:n,delta:a,over:r},e===Y.DragEnd&&"function"==typeof i&&await Promise.resolve(i(l))&&(e=Y.DragCancel)}V.current=null,(0,v.unstable_batchedUpdates)((()=>{w({type:e}),P(yt.Uninitialized),Je(null),$(null),X(null);const t=e===Y.DragEnd?"onDragEnd":"onDragCancel";if(l){const e=G.current[t];null==e||e(l),S({type:t,event:l})}}))}}(0,v.unstable_batchedUpdates)((()=>{$(l),X(e.nativeEvent)}))}),[I]),ct=(0,e.useCallback)(((e,t)=>(n,r)=>{const a=n.nativeEvent,o=I.get(r);if(null!==V.current||!o||a.dndKit||a.defaultPrevented)return;const l={active:o};!0===e(n,t.options,l)&&(a.dndKit={capturedBy:t.sensor},V.current=r,st(n,t))}),[I,st]),bt=function(t,n){return(0,e.useMemo)((()=>t.reduce(((e,t)=>{const{sensor:r}=t;return[...e,...r.activators.map((e=>({eventName:e.eventName,handler:n(e.handler,t)})))]}),[])),[t,n])}(c,ct);!function(t){(0,e.useEffect)((()=>{if(!m)return;const e=t.map((e=>{let{sensor:t}=e;return null==t.setup?void 0:t.setup()}));return()=>{for(const t of e)null==t||t()}}),t.map((e=>{let{sensor:t}=e;return t})))}(c),x((()=>{be&&R===yt.Initializing&&P(yt.Initialized)}),[be,R]),(0,e.useEffect)((()=>{const{onDragMove:e}=G.current,{active:t,activatorEvent:n,collisions:r,over:a}=xe.current;if(!t||!n)return;const o={active:t,activatorEvent:n,collisions:r,delta:{x:Ue.x,y:Ue.y},over:a};(0,v.unstable_batchedUpdates)((()=>{null==e||e(o),S({type:"onDragMove",event:o})}))}),[Ue.x,Ue.y]),(0,e.useEffect)((()=>{const{active:e,activatorEvent:t,collisions:n,droppableContainers:r,scrollAdjustedTranslate:a}=xe.current;if(!e||null==V.current||!t||!a)return;const{onDragOver:o}=G.current,l=r.get(We),i=l&&l.rect.current?{id:l.id,rect:l.rect.current,data:l.data,disabled:l.disabled}:null,u={active:e,activatorEvent:t,collisions:n,delta:{x:a.x,y:a.y},over:i};(0,v.unstable_batchedUpdates)((()=>{Je(i),null==o||o(u),S({type:"onDragOver",event:u})}))}),[We]),x((()=>{xe.current={activatorEvent:K,active:B,activeNode:se,collisionRect:Be,collisions:Ve,droppableRects:ae,draggableNodes:I,draggingNode:_e,draggingNodeRect:Le,droppableContainers:A,over:Ke,scrollableAncestors:Oe,scrollAdjustedTranslate:Ue},U.current={initial:Le,translated:Be}}),[B,se,Ve,Be,I,_e,Le,ae,A,Ke,Oe,Ue]),function(t){let{acceleration:n,activator:r=He.Pointer,canScroll:a,draggingRect:o,enabled:l,interval:i=5,order:u=$e.TreeOrder,pointerCoordinates:s,scrollableAncestors:c,scrollableAncestorRects:d,delta:f,threshold:p}=t;const h=function(e){let{delta:t,disabled:n}=e;const r=L(t);return N((e=>{if(n||!r||!e)return Qe;const a=Math.sign(t.x-r.x),o=Math.sign(t.y-r.y);return{x:{[me.Backward]:e.x[me.Backward]||-1===a,[me.Forward]:e.x[me.Forward]||1===a},y:{[me.Backward]:e.y[me.Backward]||-1===o,[me.Forward]:e.y[me.Forward]||1===o}}}),[n,t,r])}({delta:f,disabled:!l}),[v,m]=function(){const t=(0,e.useRef)(null);return[(0,e.useCallback)(((e,n)=>{t.current=setInterval(e,n)}),[]),(0,e.useCallback)((()=>{null!==t.current&&(clearInterval(t.current),t.current=null)}),[])]}(),g=(0,e.useRef)({x:0,y:0}),y=(0,e.useRef)({x:0,y:0}),b=(0,e.useMemo)((()=>{switch(r){case He.Pointer:return s?{top:s.y,bottom:s.y,left:s.x,right:s.x}:null;case He.DraggableRect:return o}}),[r,o,s]),w=(0,e.useRef)(null),k=(0,e.useCallback)((()=>{const e=w.current;if(!e)return;const t=g.current.x*y.current.x,n=g.current.y*y.current.y;e.scrollBy(t,n)}),[]),S=(0,e.useMemo)((()=>u===$e.TreeOrder?[...c].reverse():c),[u,c]);(0,e.useEffect)((()=>{if(l&&c.length&&b){for(const e of S){if(!1===(null==a?void 0:a(e)))continue;const t=c.indexOf(e),r=d[t];if(!r)continue;const{direction:o,speed:l}=we(e,r,b,n,p);for(const e of["x","y"])h[e][o[e]]||(l[e]=0,o[e]=0);if(l.x>0||l.y>0)return m(),w.current=e,v(k,i),g.current=l,void(y.current=o)}g.current={x:0,y:0},y.current={x:0,y:0},m()}else m()}),[n,k,a,m,l,i,JSON.stringify(b),JSON.stringify(h),v,c,S,d,JSON.stringify(p)])}({...he,delta:F,draggingRect:Be,pointerCoordinates:Ie,scrollableAncestors:Oe,scrollableAncestorRects:ze});const wt=(0,e.useMemo)((()=>({active:B,activeNode:se,activeNodeRect:be,activatorEvent:K,collisions:Ve,containerNodeRect:ke,dragOverlay:Ne,draggableNodes:I,droppableContainers:A,droppableRects:ae,over:Ke,measureDroppableContainers:le,scrollableAncestors:Oe,scrollableAncestorRects:ze,measuringConfiguration:ee,measuringScheduled:ie,windowRect:De})),[B,se,be,K,Ve,ke,Ne,I,A,ae,Ke,le,Oe,ze,ee,ie,De]),kt=(0,e.useMemo)((()=>({activatorEvent:K,activators:bt,active:B,activeNodeRect:be,ariaDescribedById:{draggable:J},dispatch:w,draggableNodes:I,over:Ke,measureDroppableContainers:le})),[K,bt,B,be,w,J,I,Ke,le]);return e.createElement(W.Provider,{value:E},e.createElement(dt.Provider,{value:kt},e.createElement(ft.Provider,{value:wt},e.createElement(gt.Provider,{value:ut},s)),e.createElement(vt,{disabled:!1===(null==i?void 0:i.restoreFocus)})),e.createElement(Q,{...i,hiddenTextDescribedById:J}))})),wt=(0,e.createContext)(null),kt="button",St="Droppable";function xt(){return(0,e.useContext)(ft)}const Et="Droppable",Ct={timeout:25};function Nt(t){let{animation:n,children:r}=t;const[a,o]=(0,e.useState)(null),[l,i]=(0,e.useState)(null),u=L(r);return r||a||!u||o(u),x((()=>{if(!l)return;const e=null==a?void 0:a.key,t=null==a?void 0:a.props.id;null!=e&&null!=t?Promise.resolve(n(t,l)).then((()=>{o(null)})):o(null)}),[n,a,l]),e.createElement(e.Fragment,null,r,a?(0,e.cloneElement)(a,{ref:i}):null)}const _t={x:0,y:0,scaleX:1,scaleY:1};function Lt(t){let{children:n}=t;return e.createElement(dt.Provider,{value:ct},e.createElement(gt.Provider,{value:_t},n))}const Rt={position:"fixed",touchAction:"none"},Tt=e=>z(e)?"transform 250ms ease":void 0,Pt=(0,e.forwardRef)(((t,n)=>{let{as:r,activatorEvent:a,adjustScale:o,children:l,className:i,rect:u,style:s,transform:c,transition:d=Tt}=t;if(!u)return null;const f=o?c:{...c,scaleX:1,scaleY:1},p={...Rt,width:u.width,height:u.height,top:u.top,left:u.left,transform:I.Transform.toString(f),transformOrigin:o&&a?X(a,u):void 0,transition:"function"==typeof d?d(a):d,...s};return e.createElement(r,{className:i,style:p,ref:n},l)})),Dt=e=>t=>{let{active:n,dragOverlay:r}=t;const a={},{styles:o,className:l}=e;if(null!=o&&o.active)for(const[e,t]of Object.entries(o.active))void 0!==t&&(a[e]=n.node.style.getPropertyValue(e),n.node.style.setProperty(e,t));if(null!=o&&o.dragOverlay)for(const[e,t]of Object.entries(o.dragOverlay))void 0!==t&&r.node.style.setProperty(e,t);return null!=l&&l.active&&n.node.classList.add(l.active),null!=l&&l.dragOverlay&&r.node.classList.add(l.dragOverlay),function(){for(const[e,t]of Object.entries(a))n.node.style.setProperty(e,t);null!=l&&l.active&&n.node.classList.remove(l.active)}},Ot={duration:250,easing:"ease",keyframes:e=>{let{transform:{initial:t,final:n}}=e;return[{transform:I.Transform.toString(t)},{transform:I.Transform.toString(n)}]},sideEffects:Dt({styles:{active:{opacity:"0"}}})};let zt=0;function Mt(t){return(0,e.useMemo)((()=>{if(null!=t)return zt++,zt}),[t])}const It=e.memo((t=>{let{adjustScale:n=!1,children:r,dropAnimation:a,style:o,transition:l,modifiers:i,wrapperElement:u="div",className:s,zIndex:c=999}=t;const{activatorEvent:d,active:f,activeNodeRect:p,containerNodeRect:h,draggableNodes:v,droppableContainers:m,dragOverlay:g,over:y,measuringConfiguration:w,scrollableAncestors:k,scrollableAncestorRects:S,windowRect:x}=xt(),C=(0,e.useContext)(gt),N=Mt(null==f?void 0:f.id),_=mt(i,{activatorEvent:d,active:f,activeNodeRect:p,containerNodeRect:h,draggingNodeRect:g.rect,over:y,overlayNodeRect:g.rect,scrollableAncestors:k,scrollableAncestorRects:S,transform:C,windowRect:x}),L=Xe(p),R=function(e){let{config:t,draggableNodes:n,droppableContainers:r,measuringConfiguration:a}=e;return E(((e,o)=>{if(null===t)return;const l=n.get(e);if(!l)return;const i=l.node.current;if(!i)return;const u=at(o);if(!u)return;const{transform:s}=b(o).getComputedStyle(o),c=le(s);if(!c)return;const d="function"==typeof t?t:function(e){const{duration:t,easing:n,sideEffects:r,keyframes:a}={...Ot,...e};return e=>{let{active:o,dragOverlay:l,transform:i,...u}=e;if(!t)return;const s=l.rect.left-o.rect.left,c=l.rect.top-o.rect.top,d={scaleX:1!==i.scaleX?o.rect.width*i.scaleX/l.rect.width:1,scaleY:1!==i.scaleY?o.rect.height*i.scaleY/l.rect.height:1},f={x:i.x-s,y:i.y-c,...d},p=a({...u,active:o,dragOverlay:l,transform:{initial:i,final:f}}),[h]=p,v=p[p.length-1];if(JSON.stringify(h)===JSON.stringify(v))return;const m=null==r?void 0:r({active:o,dragOverlay:l,...u}),g=l.node.animate(p,{duration:t,easing:n,fill:"forwards"});return new Promise((e=>{g.onfinish=()=>{null==m||m(),e()}}))}}(t);return xe(i,a.draggable.measure),d({active:{id:e,data:l.data,node:i,rect:a.draggable.measure(i)},draggableNodes:n,dragOverlay:{node:o,rect:a.dragOverlay.measure(u)},droppableContainers:r,measuringConfiguration:a,transform:c})}))}({config:a,draggableNodes:v,droppableContainers:m,measuringConfiguration:w}),T=L?g.setRef:void 0;return e.createElement(Lt,null,e.createElement(Nt,{animation:R},f&&N?e.createElement(Pt,{key:N,id:f.id,ref:T,as:u,activatorEvent:d,adjustScale:n,className:s,transition:l,rect:L,style:{zIndex:c,...o},transform:_},r):null))}));function Ft(e,t,n){const r=e.slice();return r.splice(n<0?r.length+n:n,0,r.splice(t,1)[0]),r}function At(e,t){return e.reduce(((e,n,r)=>{const a=t.get(n);return a&&(e[r]=a),e}),Array(e.length))}function jt(e){return null!==e&&e>=0}const Ut=e=>{let{rects:t,activeIndex:n,overIndex:r,index:a}=e;const o=Ft(t,r,n),l=t[a],i=o[a];return i&&l?{x:i.left-l.left,y:i.top-l.top,scaleX:i.width/l.width,scaleY:i.height/l.height}:null},Bt=e=>{let t,n,{activeIndex:r,index:a,rects:o,overIndex:l}=e;return a===r&&(t=o[a],n=o[l]),a===l&&(t=o[a],n=o[r]),n&&t?{x:n.left-t.left,y:n.top-t.top,scaleX:n.width/t.width,scaleY:n.height/t.height}:null},Vt="Sortable",Wt=e.createContext({activeIndex:-1,containerId:Vt,disableTransforms:!1,items:[],overIndex:-1,useDragOverlay:!1,sortedRects:[],strategy:Ut,disabled:{draggable:!1,droppable:!1}});function Ht(t){let{children:n,id:r,items:a,strategy:o=Ut,disabled:l=!1}=t;const{active:i,dragOverlay:u,droppableRects:s,over:c,measureDroppableContainers:d}=xt(),f=T(Vt,r),p=Boolean(null!==u.rect),h=(0,e.useMemo)((()=>a.map((e=>"object"==typeof e&&"id"in e?e.id:e))),[a]),v=null!=i,m=i?h.indexOf(i.id):-1,g=c?h.indexOf(c.id):-1,y=(0,e.useRef)(h),b=!function(e,t){if(e===t)return!0;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}(h,y.current),w=-1!==g&&-1===m||b,k=function(e){return"boolean"==typeof e?{draggable:e,droppable:e}:e}(l);x((()=>{b&&v&&d(h)}),[b,h,v,d]),(0,e.useEffect)((()=>{y.current=h}),[h]);const S=(0,e.useMemo)((()=>({activeIndex:m,containerId:f,disabled:k,disableTransforms:w,items:h,overIndex:g,useDragOverlay:p,sortedRects:At(h,s),strategy:o})),[m,f,k.draggable,k.droppable,w,h,g,s,p,o]);return e.createElement(Wt.Provider,{value:S},n)}const $t=e=>{let{id:t,items:n,activeIndex:r,overIndex:a}=e;return Ft(n,r,a).indexOf(t)},Qt=e=>{let{containerId:t,isSorting:n,wasDragging:r,index:a,items:o,newIndex:l,previousItems:i,previousContainerId:u,transition:s}=e;return!(!s||!r||i!==o&&a===l||!n&&(l===a||t!==u))},Yt={duration:200,easing:"ease"},Kt="transform",qt=I.Transition.toString({property:Kt,duration:0,easing:"linear"}),Xt={roleDescription:"sortable"};function Gt(t){let{animateLayoutChanges:n=Qt,attributes:r,disabled:a,data:o,getNewIndex:l=$t,id:i,strategy:u,resizeObserverConfig:s,transition:c=Yt}=t;const{items:d,containerId:f,activeIndex:p,disabled:h,disableTransforms:v,sortedRects:m,overIndex:g,useDragOverlay:y,strategy:b}=(0,e.useContext)(Wt),w=function(e,t){var n,r;return"boolean"==typeof e?{draggable:e,droppable:!1}:{draggable:null!=(n=null==e?void 0:e.draggable)?n:t.draggable,droppable:null!=(r=null==e?void 0:e.droppable)?r:t.droppable}}(a,h),k=d.indexOf(i),S=(0,e.useMemo)((()=>({sortable:{containerId:f,index:k,items:d},...o})),[f,o,k,d]),E=(0,e.useMemo)((()=>d.slice(d.indexOf(i))),[d,i]),{rect:N,node:L,isOver:R,setNodeRef:P}=function(t){let{data:n,disabled:r=!1,id:a,resizeObserverConfig:o}=t;const l=T(Et),{active:i,dispatch:u,over:s,measureDroppableContainers:c}=(0,e.useContext)(dt),d=(0,e.useRef)({disabled:r}),f=(0,e.useRef)(!1),p=(0,e.useRef)(null),h=(0,e.useRef)(null),{disabled:v,updateMeasurementsFor:m,timeout:g}={...Ct,...o},y=C(null!=m?m:a),b=Ge({callback:(0,e.useCallback)((()=>{f.current?(null!=h.current&&clearTimeout(h.current),h.current=setTimeout((()=>{c(Array.isArray(y.current)?y.current:[y.current]),h.current=null}),g)):f.current=!0}),[g]),disabled:v||!i}),w=(0,e.useCallback)(((e,t)=>{b&&(t&&(b.unobserve(t),f.current=!1),e&&b.observe(e))}),[b]),[k,S]=_(w),E=C(n);return(0,e.useEffect)((()=>{b&&k.current&&(b.disconnect(),f.current=!1,b.observe(k.current))}),[k,b]),x((()=>(u({type:Y.RegisterDroppable,element:{id:a,key:l,disabled:r,node:k,rect:p,data:E}}),()=>u({type:Y.UnregisterDroppable,key:l,id:a}))),[a]),(0,e.useEffect)((()=>{r!==d.current.disabled&&(u({type:Y.SetDroppableDisabled,id:a,key:l,disabled:r}),d.current.disabled=r)}),[a,l,r,u]),{active:i,rect:p,isOver:(null==s?void 0:s.id)===a,node:k,over:s,setNodeRef:S}}({id:i,data:S,disabled:w.droppable,resizeObserverConfig:{updateMeasurementsFor:E,...s}}),{active:D,activatorEvent:O,activeNodeRect:M,attributes:F,setNodeRef:A,listeners:j,isDragging:U,over:B,setActivatorNodeRef:V,transform:W}=function(t){let{id:n,data:r,disabled:a=!1,attributes:o}=t;const l=T(St),{activators:i,activatorEvent:u,active:s,activeNodeRect:c,ariaDescribedById:d,draggableNodes:f,over:p}=(0,e.useContext)(dt),{role:h=kt,roleDescription:v="draggable",tabIndex:m=0}=null!=o?o:{},g=(null==s?void 0:s.id)===n,y=(0,e.useContext)(g?gt:wt),[b,w]=_(),[k,S]=_(),E=function(t,n){return(0,e.useMemo)((()=>t.reduce(((e,t)=>{let{eventName:r,handler:a}=t;return e[r]=e=>{a(e,n)},e}),{})),[t,n])}(i,n),N=C(r);return x((()=>(f.set(n,{id:n,key:l,node:b,activatorNode:k,data:N}),()=>{const e=f.get(n);e&&e.key===l&&f.delete(n)})),[f,n]),{active:s,activatorEvent:u,activeNodeRect:c,attributes:(0,e.useMemo)((()=>({role:h,tabIndex:m,"aria-disabled":a,"aria-pressed":!(!g||h!==kt)||void 0,"aria-roledescription":v,"aria-describedby":d.draggable})),[a,h,m,g,v,d.draggable]),isDragging:g,listeners:a?void 0:E,node:b,over:p,setNodeRef:w,setActivatorNodeRef:S,transform:y}}({id:i,data:S,attributes:{...Xt,...r},disabled:w.draggable}),H=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return(0,e.useMemo)((()=>e=>{n.forEach((t=>t(e)))}),n)}(P,A),$=Boolean(D),Q=$&&!v&&jt(p)&&jt(g),K=!y&&U,q=K&&Q?W:null,X=Q?null!=q?q:(null!=u?u:b)({rects:m,activeNodeRect:M,activeIndex:p,overIndex:g,index:k}):null,G=jt(p)&&jt(g)?l({id:i,items:d,activeIndex:p,overIndex:g}):k,J=null==D?void 0:D.id,Z=(0,e.useRef)({activeId:J,items:d,newIndex:G,containerId:f}),ee=d!==Z.current.items,te=n({active:D,containerId:f,isDragging:U,isSorting:$,id:i,index:k,items:d,newIndex:Z.current.newIndex,previousItems:Z.current.items,previousContainerId:Z.current.containerId,transition:c,wasDragging:null!=Z.current.activeId}),ne=function(t){let{disabled:n,index:r,node:a,rect:o}=t;const[l,i]=(0,e.useState)(null),u=(0,e.useRef)(r);return x((()=>{if(!n&&r!==u.current&&a.current){const e=o.current;if(e){const t=ue(a.current,{ignoreTransform:!0}),n={x:e.left-t.left,y:e.top-t.top,scaleX:e.width/t.width,scaleY:e.height/t.height};(n.x||n.y)&&i(n)}}r!==u.current&&(u.current=r)}),[n,r,a,o]),(0,e.useEffect)((()=>{l&&i(null)}),[l]),l}({disabled:!te,index:k,node:L,rect:N});return(0,e.useEffect)((()=>{$&&Z.current.newIndex!==G&&(Z.current.newIndex=G),f!==Z.current.containerId&&(Z.current.containerId=f),d!==Z.current.items&&(Z.current.items=d)}),[$,G,f,d]),(0,e.useEffect)((()=>{if(J===Z.current.activeId)return;if(J&&!Z.current.activeId)return void(Z.current.activeId=J);const e=setTimeout((()=>{Z.current.activeId=J}),50);return()=>clearTimeout(e)}),[J]),{active:D,activeIndex:p,attributes:F,data:S,rect:N,index:k,newIndex:G,items:d,isOver:R,isSorting:$,isDragging:U,listeners:j,node:L,overIndex:g,over:B,setNodeRef:H,setActivatorNodeRef:V,setDroppableNodeRef:P,setDraggableNodeRef:A,transform:null!=ne?ne:X,transition:ne||ee&&Z.current.newIndex===k?qt:K&&!z(O)||!c?void 0:$||te?I.Transition.toString({...c,property:Kt}):void 0}}Re.Down,Re.Right,Re.Up,Re.Left;var Jt=n(379),Zt=n.n(Jt),en=n(795),tn=n.n(en),nn=n(569),rn=n.n(nn),an=n(565),on=n.n(an),ln=n(216),un=n.n(ln),sn=n(589),cn=n.n(sn),dn=n(286),fn={};function pn(){return pn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pn.apply(this,arguments)}function hn(t){var n=t.id,r=t.src,a=t.alt,o=Gt({id:n}),l=o.attributes,i=o.listeners,u=o.setNodeRef,s=o.transform,c=o.transition,d={transform:I.Transform.toString(s),transition:c};return e.createElement("div",pn({ref:u},l,i,{style:d,className:"p-4 mb-3"}),e.createElement("img",{src:r,alt:a,width:"200",className:"image-fluid rounded float-start"}))}function vn(e){return vn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},vn(e)}function mn(){mn=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},l=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",u=o.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var o=t&&t.prototype instanceof g?t:g,l=Object.create(o.prototype),i=new T(r||[]);return a(l,"_invoke",{value:N(e,n,i)}),l}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var f="suspendedStart",p="suspendedYield",h="executing",v="completed",m={};function g(){}function y(){}function b(){}var w={};s(w,l,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(P([])));S&&S!==n&&r.call(S,l)&&(w=S);var x=b.prototype=g.prototype=Object.create(w);function E(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function C(e,t){function n(a,o,l,i){var u=d(e[a],e,o);if("throw"!==u.type){var s=u.arg,c=s.value;return c&&"object"==vn(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,l,i)}),(function(e){n("throw",e,l,i)})):t.resolve(c).then((function(e){s.value=e,l(s)}),(function(e){return n("throw",e,l,i)}))}i(u.arg)}var o;a(this,"_invoke",{value:function(e,r){function a(){return new t((function(t,a){n(e,r,t,a)}))}return o=o?o.then(a,a):a()}})}function N(t,n,r){var a=f;return function(o,l){if(a===h)throw new Error("Generator is already running");if(a===v){if("throw"===o)throw l;return{value:e,done:!0}}for(r.method=o,r.arg=l;;){var i=r.delegate;if(i){var u=_(i,r);if(u){if(u===m)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===f)throw a=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=h;var s=d(t,n,r);if("normal"===s.type){if(a=r.done?v:p,s.arg===m)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(a=v,r.method="throw",r.arg=s.arg)}}}function _(t,n){var r=n.method,a=t.iterator[r];if(a===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var o=d(a,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,m;var l=o.arg;return l?l.done?(n[t.resultName]=l.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):l:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function L(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function R(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(L,this),this.reset(!0)}function P(t){if(t||""===t){var n=t[l];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,o=function n(){for(;++a<t.length;)if(r.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(vn(t)+" is not iterable")}return y.prototype=b,a(x,"constructor",{value:b,configurable:!0}),a(b,"constructor",{value:y,configurable:!0}),y.displayName=s(b,u,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,s(e,u,"GeneratorFunction")),e.prototype=Object.create(x),e},t.awrap=function(e){return{__await:e}},E(C.prototype),s(C.prototype,i,(function(){return this})),t.AsyncIterator=C,t.async=function(e,n,r,a,o){void 0===o&&(o=Promise);var l=new C(c(e,n,r,a),o);return t.isGeneratorFunction(n)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},E(x),s(x,u,"Generator"),s(x,l,(function(){return this})),s(x,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=P,T.prototype={constructor:T,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(R),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(r,a){return i.type="throw",i.arg=t,n.next=r,a&&(n.method="next",n.arg=e),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var l=this.tryEntries[o],i=l.completion;if("root"===l.tryLoc)return a("end");if(l.tryLoc<=this.prev){var u=r.call(l,"catchLoc"),s=r.call(l,"finallyLoc");if(u&&s){if(this.prev<l.catchLoc)return a(l.catchLoc,!0);if(this.prev<l.finallyLoc)return a(l.finallyLoc)}else if(u){if(this.prev<l.catchLoc)return a(l.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return a(l.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=t,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),R(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;R(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:P(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}function gn(e,t,n,r,a,o,l){try{var i=e[o](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function yn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,l,i=[],u=!0,s=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){s=!0,a=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(s)throw a}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return bn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?bn(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function wn(){var t=function(){var t,n,r,a,o=(r=(0,e.useState)((t=sessionStorage.getItem("token"),null==(n=JSON.parse(t))?void 0:n.token)),a=2,function(e){if(Array.isArray(e))return e}(r)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,l,i=[],u=!0,s=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){s=!0,a=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(s)throw a}}return i}}(r,a)||function(e,t){if(e){if("string"==typeof e)return h(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,t):void 0}}(r,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=o[0],i=o[1];return{setToken:function(e){sessionStorage.setItem("token",JSON.stringify(e)),i(e.token)},token:l}}(),n=t.token,r=t.setToken,a=yn((0,e.useState)([]),2),o=a[0],l=a[1],i=yn((0,e.useState)(null),2),u=i[0],s=i[1];return(0,e.useEffect)((function(){var e=function(){var e,t=(e=mn().mark((function e(){var t,n,r;return mn().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://api.pexels.com/v1/curated",{headers:{Accept:"application/json",Authorization:"7fQk0TG3hoyDmB691bLA045LeFQYs8E1styCrV3rTcDJsg5VGozmBlzz"}});case 2:return t=e.sent,e.next=5,t.json();case 5:n=e.sent,r=n.photos,l(r);case 8:case"end":return e.stop()}}),e)})),function(){var t=this,n=arguments;return new Promise((function(r,a){var o=e.apply(t,n);function l(e){gn(o,r,a,l,i,"next",e)}function i(e){gn(o,r,a,l,i,"throw",e)}l(void 0)}))});return function(){return t.apply(this,arguments)}}();e()}),[]),n?e.createElement("div",{className:"container d-flex flex-wrap justify-content-start align-items-center mb-3"},e.createElement(bt,{collisionDetection:ee,onDragEnd:function(e){if(e.over&&e.active.id!==e.over.id){var t=o.findIndex((function(t){return t.id===e.over.id})),n=o.findIndex((function(t){return t.id===e.active.id}));return l((function(e){return Ft(e,n,t)}))}s(null)},onDragStart:function(e){s(e.active.id)}},e.createElement(Ht,{items:o,strategy:Bt},o.map((function(t){return e.createElement(hn,{key:t.id,id:t.id,src:t.src.tiny,alt:t.alt})}))),e.createElement(It,{adjustScale:!0},u?e.createElement(hn,{id:u,src:o.find((function(e){return e.id===u})).src.portrait,alt:o.find((function(e){return e.id===u})).alt}):null))):e.createElement(p,{setToken:r})}fn.styleTagTransform=cn(),fn.setAttributes=on(),fn.insert=rn().bind(null,"head"),fn.domAPI=tn(),fn.insertStyleElement=un(),Zt()(dn.Z,fn),dn.Z&&dn.Z.locals&&dn.Z.locals,t.createRoot(document.getElementById("root")).render(e.createElement(e.StrictMode,null,e.createElement(wn,null)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,